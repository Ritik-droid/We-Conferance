{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CImage = forwardRef(function (_a, ref) {\n  var _b;\n  var align = _a.align,\n    className = _a.className,\n    fluid = _a.fluid,\n    rounded = _a.rounded,\n    thumbnail = _a.thumbnail,\n    rest = __rest(_a, [\"align\", \"className\", \"fluid\", \"rounded\", \"thumbnail\"]);\n  return React.createElement(\"img\", __assign({\n    className: classNames((_b = {}, _b[\"float-\".concat(align)] = align && (align === 'start' || align === 'end'), _b['d-block mx-auto'] = align && align === 'center', _b['img-fluid'] = fluid, _b.rounded = rounded, _b['img-thumbnail'] = thumbnail, _b), className) || undefined\n  }, rest, {\n    ref: ref\n  }));\n});\nCImage.propTypes = {\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  className: PropTypes.string,\n  fluid: PropTypes.bool,\n  rounded: PropTypes.bool,\n  thumbnail: PropTypes.bool\n};\nCImage.displayName = 'CImage';\nexport { CImage };","map":{"version":3,"names":["CImage","forwardRef","_a","ref","align","className","fluid","rounded","thumbnail","rest","__rest","React","createElement","__assign","classNames","_b","concat","undefined","propTypes","PropTypes","oneOf","string","bool","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\image\\CImage.tsx"],"sourcesContent":["import React, { forwardRef, ImgHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CImageProps extends ImgHTMLAttributes<HTMLOrSVGImageElement> {\n  /**\n   * Set the horizontal aligment.\n   */\n  align?: 'start' | 'center' | 'end'\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Make image responsive.\n   */\n  fluid?: boolean\n  /**\n   * Make image rounded.\n   */\n  rounded?: boolean\n  /**\n   * Give an image a rounded 1px border appearance.\n   */\n  thumbnail?: boolean\n}\n\nexport const CImage = forwardRef<HTMLImageElement, CImageProps>(\n  ({ align, className, fluid, rounded, thumbnail, ...rest }, ref) => {\n    return (\n      <img\n        className={\n          classNames(\n            {\n              [`float-${align}`]: align && (align === 'start' || align === 'end'),\n              'd-block mx-auto': align && align === 'center',\n              'img-fluid': fluid,\n              rounded: rounded,\n              'img-thumbnail': thumbnail,\n            },\n            className,\n          ) || undefined\n        }\n        {...rest}\n        ref={ref}\n      />\n    )\n  },\n)\n\nCImage.propTypes = {\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  className: PropTypes.string,\n  fluid: PropTypes.bool,\n  rounded: PropTypes.bool,\n  thumbnail: PropTypes.bool,\n}\n\nCImage.displayName = 'CImage'\n"],"mappings":";;;;IA2BaA,MAAM,GAAGC,UAAU,CAC9B,UAACC,EAAwD,EAAEC,GAAG;;EAA3D,IAAAC,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAEC,OAAO,GAAAL,EAAA,CAAAK,OAAA;IAAEC,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAAtD,uDAAwD,CAAF;EACrD,OACES,KAAA,CAAAC,aAAA,QAAAC,QAAA;IACER,SAAS,EACPS,UAAU,EAAAC,EAAA,OAENA,EAAA,CAAC,QAAS,CAAAC,MAAA,CAAAZ,KAAK,CAAE,IAAGA,KAAK,KAAKA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,KAAK,CAAC,EACnEW,EAAA,mBAAiB,GAAEX,KAAK,IAAIA,KAAK,KAAK,QAAQ,EAC9CW,EAAA,aAAW,GAAET,KAAK,EAClBS,EAAA,CAAAR,OAAO,GAAEA,OAAO,EAChBQ,EAAA,iBAAe,GAAEP,SAAS,E,KAE5BH,SAAS,CACV,IAAIY;EAAS,CAEZ,EAAAR,IAAI,EACR;IAAAN,GAAG,EAAEA;EAAG,CACR;AAEN,CAAC;AAGHH,MAAM,CAACkB,SAAS,GAAG;EACjBd,KAAK,EAAEe,SAAS,CAACC,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;EAClDf,SAAS,EAAEc,SAAS,CAACE,MAAM;EAC3Bf,KAAK,EAAEa,SAAS,CAACG,IAAI;EACrBf,OAAO,EAAEY,SAAS,CAACG,IAAI;EACvBd,SAAS,EAAEW,SAAS,CAACG;CACtB;AAEDtB,MAAM,CAACuB,WAAW,GAAG,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}