{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CFormControlWrapper } from './CFormControlWrapper.js';\nvar CFormTextarea = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    feedback = _a.feedback,\n    feedbackInvalid = _a.feedbackInvalid,\n    feedbackValid = _a.feedbackValid,\n    floatingClassName = _a.floatingClassName,\n    floatingLabel = _a.floatingLabel,\n    id = _a.id,\n    invalid = _a.invalid,\n    label = _a.label,\n    plainText = _a.plainText,\n    text = _a.text,\n    tooltipFeedback = _a.tooltipFeedback,\n    valid = _a.valid,\n    rest = __rest(_a, [\"children\", \"className\", \"feedback\", \"feedbackInvalid\", \"feedbackValid\", \"floatingClassName\", \"floatingLabel\", \"id\", \"invalid\", \"label\", \"plainText\", \"text\", \"tooltipFeedback\", \"valid\"]);\n  return React.createElement(CFormControlWrapper, {\n    describedby: rest['aria-describedby'],\n    feedback: feedback,\n    feedbackInvalid: feedbackInvalid,\n    feedbackValid: feedbackValid,\n    floatingClassName: floatingClassName,\n    floatingLabel: floatingLabel,\n    id: id,\n    invalid: invalid,\n    label: label,\n    text: text,\n    tooltipFeedback: tooltipFeedback,\n    valid: valid\n  }, React.createElement(\"textarea\", __assign({\n    className: classNames(plainText ? 'form-control-plaintext' : 'form-control', {\n      'is-invalid': invalid,\n      'is-valid': valid\n    }, className),\n    id: id\n  }, rest, {\n    ref: ref\n  }), children));\n});\nCFormTextarea.propTypes = __assign({\n  className: PropTypes.string,\n  id: PropTypes.string,\n  plainText: PropTypes.bool\n}, CFormControlWrapper.propTypes);\nCFormTextarea.displayName = 'CFormTextarea';\nexport { CFormTextarea };","map":{"version":3,"names":["CFormTextarea","forwardRef","_a","ref","children","className","feedback","feedbackInvalid","feedbackValid","floatingClassName","floatingLabel","id","invalid","label","plainText","text","tooltipFeedback","valid","rest","__rest","React","createElement","CFormControlWrapper","describedby","__assign","classNames","propTypes","PropTypes","string","bool","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/form/CFormTextarea.tsx"],"sourcesContent":["import React, { ChangeEventHandler, forwardRef, TextareaHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormControlWrapper, CFormControlWrapperProps } from './CFormControlWrapper'\n\nexport interface CFormTextareaProps\n  extends CFormControlWrapperProps,\n    TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Method called immediately after the `value` prop changes.\n   */\n  onChange?: ChangeEventHandler<HTMLTextAreaElement>\n  /**\n   * Render the component styled as plain text. Removes the default form field styling and preserve the correct margin and padding. Recommend to use only along side `readonly`.\n   */\n  plainText?: boolean\n  /**\n   * Toggle the readonly state for the component.\n   */\n  readOnly?: boolean\n  /**\n   * The `value` attribute of component.\n   *\n   * @controllable onChange\n   * */\n  value?: string | string[] | number\n}\n\nexport const CFormTextarea = forwardRef<HTMLTextAreaElement, CFormTextareaProps>(\n  (\n    {\n      children,\n      className,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      floatingClassName,\n      floatingLabel,\n      id,\n      invalid,\n      label,\n      plainText,\n      text,\n      tooltipFeedback,\n      valid,\n      ...rest\n    },\n    ref,\n  ) => {\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        floatingClassName={floatingClassName}\n        floatingLabel={floatingLabel}\n        id={id}\n        invalid={invalid}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      >\n        <textarea\n          className={classNames(\n            plainText ? 'form-control-plaintext' : 'form-control',\n            {\n              'is-invalid': invalid,\n              'is-valid': valid,\n            },\n            className,\n          )}\n          id={id}\n          {...rest}\n          ref={ref}\n        >\n          {children}\n        </textarea>\n      </CFormControlWrapper>\n    )\n  },\n)\n\nCFormTextarea.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  plainText: PropTypes.bool,\n  ...CFormControlWrapper.propTypes,\n}\n\nCFormTextarea.displayName = 'CFormTextarea'\n"],"mappings":";;;;;IAqCaA,aAAa,GAAGC,UAAU,CACrC,UACEC,EAgBC,EACDC,GAAG;EAhBD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IACTC,QAAQ,GAAAJ,EAAA,CAAAI,QAAA;IACRC,eAAe,GAAAL,EAAA,CAAAK,eAAA;IACfC,aAAa,GAAAN,EAAA,CAAAM,aAAA;IACbC,iBAAiB,GAAAP,EAAA,CAAAO,iBAAA;IACjBC,aAAa,GAAAR,EAAA,CAAAQ,aAAA;IACbC,EAAE,GAAAT,EAAA,CAAAS,EAAA;IACFC,OAAO,GAAAV,EAAA,CAAAU,OAAA;IACPC,KAAK,GAAAX,EAAA,CAAAW,KAAA;IACLC,SAAS,GAAAZ,EAAA,CAAAY,SAAA;IACTC,IAAI,GAAAb,EAAA,CAAAa,IAAA;IACJC,eAAe,GAAAd,EAAA,CAAAc,eAAA;IACfC,KAAK,GAAAf,EAAA,CAAAe,KAAA;IACFC,IAAI,GAfTC,MAAA,CAAAjB,EAAA,4LAgBC,CADQ;EAIT,OACEkB,KAAC,CAAAC,aAAA,CAAAC,mBAAmB,EAClB;IAAAC,WAAW,EAAEL,IAAI,CAAC,kBAAkB,CAAC;IACrCZ,QAAQ,EAAEA,QAAQ;IAClBC,eAAe,EAAEA,eAAe;IAChCC,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA,iBAAiB;IACpCC,aAAa,EAAEA,aAAa;IAC5BC,EAAE,EAAEA,EAAE;IACNC,OAAO,EAAEA,OAAO;IAChBC,KAAK,EAAEA,KAAK;IACZE,IAAI,EAAEA,IAAI;IACVC,eAAe,EAAEA,eAAe;IAChCC,KAAK,EAAEA;EAAK,GAEZG,KAAA,CAAAC,aAAA,aAAAG,QAAA;IACEnB,SAAS,EAAEoB,UAAU,CACnBX,SAAS,GAAG,wBAAwB,GAAG,cAAc,EACrD;MACE,YAAY,EAAEF,OAAO;MACrB,UAAU,EAAEK;IACb,GACDZ,SAAS,CACV;IACDM,EAAE,EAAEA;EAAE,CACF,EAAAO,IAAI,EACR;IAAAf,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACA,CACS;AAE1B,CAAC;AAGHJ,aAAa,CAAC0B,SAAS,GAAAF,QAAA;EACrBnB,SAAS,EAAEsB,SAAS,CAACC,MAAM;EAC3BjB,EAAE,EAAEgB,SAAS,CAACC,MAAM;EACpBd,SAAS,EAAEa,SAAS,CAACE;AAAI,GACtBP,mBAAmB,CAACI,SAAS,CACjC;AAED1B,aAAa,CAAC8B,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}