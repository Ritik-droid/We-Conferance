{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useRef, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CAccordionContext } from './CAccordion.js';\nvar CAccordionItemContext = createContext({});\nvar CAccordionItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    itemKey = _a.itemKey,\n    rest = __rest(_a, [\"children\", \"className\", \"itemKey\"]);\n  var _itemKey = useRef(itemKey !== null && itemKey !== void 0 ? itemKey : Math.random().toString(36).slice(2, 11));\n  var _b = useContext(CAccordionContext),\n    _activeItemKey = _b._activeItemKey,\n    alwaysOpen = _b.alwaysOpen,\n    setActiveKey = _b.setActiveKey;\n  var _c = useState(Boolean(_activeItemKey === _itemKey.current)),\n    visible = _c[0],\n    setVisible = _c[1];\n  useEffect(function () {\n    !alwaysOpen && visible && setActiveKey(_itemKey.current);\n  }, [visible]);\n  useEffect(function () {\n    setVisible(Boolean(_activeItemKey === _itemKey.current));\n  }, [_activeItemKey]);\n  return React.createElement(\"div\", __assign({\n    className: classNames('accordion-item', className)\n  }, rest, {\n    ref: ref\n  }), React.createElement(CAccordionItemContext.Provider, {\n    value: {\n      setVisible: setVisible,\n      visible: visible\n    }\n  }, children));\n});\nCAccordionItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nCAccordionItem.displayName = 'CAccordionItem';\nexport { CAccordionItem, CAccordionItemContext };","map":{"version":3,"names":["CAccordionItemContext","createContext","CAccordionItem","forwardRef","_a","ref","children","className","itemKey","rest","__rest","_itemKey","useRef","Math","random","toString","slice","_b","useContext","CAccordionContext","_activeItemKey","alwaysOpen","setActiveKey","_c","useState","Boolean","current","visible","setVisible","useEffect","React","createElement","__assign","classNames","Provider","value","propTypes","PropTypes","node","string","oneOfType","number","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\accordion\\CAccordionItem.tsx"],"sourcesContent":["import React, {\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CAccordionContext } from './CAccordion'\n\nexport interface CAccordionItemContextProps {\n  setVisible: (a: boolean) => void\n  visible?: boolean\n}\n\nexport const CAccordionItemContext = createContext({} as CAccordionItemContextProps)\n\nexport interface CAccordionItemProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Item key.\n   */\n  itemKey?: number | string\n}\n\nexport const CAccordionItem = forwardRef<HTMLDivElement, CAccordionItemProps>(\n  ({ children, className, itemKey, ...rest }, ref) => {\n    const _itemKey = useRef(itemKey ?? Math.random().toString(36).slice(2, 11))\n\n    const { _activeItemKey, alwaysOpen, setActiveKey } = useContext(CAccordionContext)\n    const [visible, setVisible] = useState(Boolean(_activeItemKey === _itemKey.current))\n\n    useEffect(() => {\n      !alwaysOpen && visible && setActiveKey(_itemKey.current)\n    }, [visible])\n\n    useEffect(() => {\n      setVisible(Boolean(_activeItemKey === _itemKey.current))\n    }, [_activeItemKey])\n\n    return (\n      <div className={classNames('accordion-item', className)} {...rest} ref={ref}>\n        <CAccordionItemContext.Provider value={{ setVisible, visible }}>\n          {children}\n        </CAccordionItemContext.Provider>\n      </div>\n    )\n  },\n)\n\nCAccordionItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n}\n\nCAccordionItem.displayName = 'CAccordionItem'\n"],"mappings":";;;;;IAmBaA,qBAAqB,GAAGC,aAAa,CAAC,EAAgC;IAatEC,cAAc,GAAGC,UAAU,CACtC,UAACC,EAAyC,EAAEC,GAAG;EAA5C,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IAAKC,IAAI,GAAvCC,MAAA,CAAAN,EAAA,sCAAyC,CAAF;EACtC,IAAMO,QAAQ,GAAGC,MAAM,CAACJ,OAAO,KAAP,QAAAA,OAAO,KAAP,SAAAA,OAAO,GAAIK,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAErE,IAAAC,EAA+C,GAAAC,UAAU,CAACC,iBAAiB,CAAC;IAA1EC,cAAc,GAAAH,EAAA,CAAAG,cAAA;IAAEC,UAAU,GAAAJ,EAAA,CAAAI,UAAA;IAAEC,YAAY,GAAAL,EAAA,CAAAK,YAAkC;EAC5E,IAAAC,EAAA,GAAwBC,QAAQ,CAACC,OAAO,CAACL,cAAc,KAAKT,QAAQ,CAACe,OAAO,CAAC,CAAC;IAA7EC,OAAO,GAAAJ,EAAA;IAAEK,UAAU,GAAAL,EAAA,GAA0D;EAEpFM,SAAS,CAAC;IACR,CAACR,UAAU,IAAIM,OAAO,IAAIL,YAAY,CAACX,QAAQ,CAACe,OAAO,CAAC;EAC1D,CAAC,EAAE,CAACC,OAAO,CAAC,CAAC;EAEbE,SAAS,CAAC;IACRD,UAAU,CAACH,OAAO,CAACL,cAAc,KAAKT,QAAQ,CAACe,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,OACEU,KAAA,CAAAC,aAAA,QAAAC,QAAA;IAAKzB,SAAS,EAAE0B,UAAU,CAAC,gBAAgB,EAAE1B,SAAS;EAAC,CAAM,EAAAE,IAAI,EAAE;IAAAJ,GAAG,EAAEA;EAAG,IACzEyB,KAAA,CAAAC,aAAA,CAAC/B,qBAAqB,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAEP,UAAU,EAAAA,UAAA;MAAED,OAAO,EAAAA;IAAA;EAAE,GAC3DrB,QAAQ,CACsB,CAC7B;AAEV,CAAC;AAGHJ,cAAc,CAACkC,SAAS,GAAG;EACzB9B,QAAQ,EAAE+B,SAAS,CAACC,IAAI;EACxB/B,SAAS,EAAE8B,SAAS,CAACE,MAAM;EAC3B/B,OAAO,EAAE6B,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACE,MAAM,CAAC;CAClE;AAEDrC,cAAc,CAACwC,WAAW,GAAG,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}