{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CForm = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    validated = _a.validated,\n    rest = __rest(_a, [\"children\", \"className\", \"validated\"]);\n  return React.createElement(\"form\", __assign({\n    className: classNames({\n      'was-validated': validated\n    }, className) || undefined\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCForm.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  validated: PropTypes.bool\n};\nCForm.displayName = 'CForm';\nexport { CForm };","map":{"version":3,"names":["CForm","forwardRef","_a","ref","children","className","validated","rest","__rest","React","createElement","__assign","classNames","undefined","propTypes","PropTypes","node","string","bool","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\form\\CForm.tsx"],"sourcesContent":["import React, { forwardRef, FormHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CFormProps extends FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Mark a form as validated. If you set it `true`, all validation styles will be applied to the forms component.\n   */\n  validated?: boolean\n}\n\nexport const CForm = forwardRef<HTMLFormElement, CFormProps>(\n  ({ children, className, validated, ...rest }, ref) => {\n    return (\n      <form\n        className={classNames({ 'was-validated': validated }, className) || undefined}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </form>\n    )\n  },\n)\n\nCForm.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  validated: PropTypes.bool,\n}\n\nCForm.displayName = 'CForm'\n"],"mappings":";;;;IAeaA,KAAK,GAAGC,UAAU,CAC7B,UAACC,EAA2C,EAAEC,GAAG;EAA9C,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAKC,IAAI,GAAzCC,MAAA,CAAAN,EAAA,wCAA2C,CAAF;EACxC,OACEO,KACE,CAAAC,aAAA,SAAAC,QAAA;IAAAN,SAAS,EAAEO,UAAU,CAAC;MAAE,eAAe,EAAEN;IAAS,CAAE,EAAED,SAAS,CAAC,IAAIQ;EAAS,CACzE,EAAAN,IAAI,EACR;IAAAJ,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACJ;AAEX,CAAC;AAGHJ,KAAK,CAACc,SAAS,GAAG;EAChBV,QAAQ,EAAEW,SAAS,CAACC,IAAI;EACxBX,SAAS,EAAEU,SAAS,CAACE,MAAM;EAC3BX,SAAS,EAAES,SAAS,CAACG;CACtB;AAEDlB,KAAK,CAACmB,WAAW,GAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}