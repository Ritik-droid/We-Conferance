{"ast":null,"code":"// We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to\n// allocate more objects.\nconst arg = {\n  theme: undefined\n};\n\n/**\n * Memoize style function on theme.\n * Intended to be used in styled() calls that only need access to the theme.\n */\nexport default function memoTheme(styleFn) {\n  let lastValue;\n  let lastTheme;\n  return props => {\n    let value = lastValue;\n    if (value === undefined || props.theme !== lastTheme) {\n      arg.theme = props.theme;\n      value = styleFn(arg);\n      lastValue = value;\n      lastTheme = props.theme;\n    }\n    return value;\n  };\n}","map":{"version":3,"names":["arg","theme","undefined","memoTheme","styleFn","lastValue","lastTheme","props","value"],"sources":["C:/Users/ritik/OneDrive/Desktop/Video-Call-App/client/node_modules/@mui/material/utils/memoTheme.js"],"sourcesContent":["// We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to\n// allocate more objects.\nconst arg = {\n  theme: undefined\n};\n\n/**\n * Memoize style function on theme.\n * Intended to be used in styled() calls that only need access to the theme.\n */\nexport default function memoTheme(styleFn) {\n  let lastValue;\n  let lastTheme;\n  return props => {\n    let value = lastValue;\n    if (value === undefined || props.theme !== lastTheme) {\n      arg.theme = props.theme;\n      value = styleFn(arg);\n      lastValue = value;\n      lastTheme = props.theme;\n    }\n    return value;\n  };\n}"],"mappings":"AAAA;AACA;AACA,MAAMA,GAAG,GAAG;EACVC,KAAK,EAAEC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,SAASC,SAASA,CAACC,OAAO,EAAE;EACzC,IAAIC,SAAS;EACb,IAAIC,SAAS;EACb,OAAOC,KAAK,IAAI;IACd,IAAIC,KAAK,GAAGH,SAAS;IACrB,IAAIG,KAAK,KAAKN,SAAS,IAAIK,KAAK,CAACN,KAAK,KAAKK,SAAS,EAAE;MACpDN,GAAG,CAACC,KAAK,GAAGM,KAAK,CAACN,KAAK;MACvBO,KAAK,GAAGJ,OAAO,CAACJ,GAAG,CAAC;MACpBK,SAAS,GAAGG,KAAK;MACjBF,SAAS,GAAGC,KAAK,CAACN,KAAK;IACzB;IACA,OAAOO,KAAK;EACd,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}