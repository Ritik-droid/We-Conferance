{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nimport { CNavContext } from '../sidebar/CSidebarNav.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nvar CNavLink = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    idx = _a.idx,\n    rest = __rest(_a, [\"children\", \"className\", \"idx\"]);\n  var navLinkRef = useRef(null);\n  var forkedRef = useForkedRef(ref, navLinkRef);\n  var setVisibleGroup = useContext(CNavContext).setVisibleGroup;\n  useEffect(function () {\n    var _a;\n    rest.active = (_a = navLinkRef.current) === null || _a === void 0 ? void 0 : _a.classList.contains('active');\n    idx && rest.active && setVisibleGroup(idx);\n  }, [rest.active, className]);\n  return React.createElement(CLink, __assign({\n    className: classNames('nav-link', className)\n  }, rest, {\n    ref: forkedRef\n  }), children);\n});\nCNavLink.propTypes = {\n  active: PropTypes.bool,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  idx: PropTypes.string\n};\nCNavLink.displayName = 'CNavLink';\nexport { CNavLink };","map":{"version":3,"names":["CNavLink","forwardRef","_a","ref","children","className","idx","rest","__rest","navLinkRef","useRef","forkedRef","useForkedRef","setVisibleGroup","useContext","CNavContext","useEffect","active","current","classList","contains","React","createElement","CLink","__assign","classNames","propTypes","PropTypes","bool","as","elementType","node","string","disabled","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/nav/CNavLink.tsx"],"sourcesContent":["import React, { forwardRef, useContext, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLinkProps, CLink } from '../link/CLink'\nimport { CNavContext } from '../sidebar/CSidebarNav'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\nimport { useForkedRef } from '../../hooks'\n\nexport interface CNavLinkProps extends Omit<CLinkProps, 'idx'> {\n  /**\n   * @ignore\n   */\n  idx?: string\n  /**\n   * @ignore\n   */\n  to?: string\n}\n\nexport const CNavLink: PolymorphicRefForwardingComponent<'a', CNavLinkProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CNavLinkProps\n>(({ children, className, idx, ...rest }, ref) => {\n  const navLinkRef = useRef<HTMLAnchorElement>(null)\n  const forkedRef = useForkedRef(ref, navLinkRef)\n\n  const { setVisibleGroup } = useContext(CNavContext)\n\n  useEffect(() => {\n    rest.active = navLinkRef.current?.classList.contains('active')\n    idx && rest.active && setVisibleGroup(idx)\n  }, [rest.active, className])\n\n  return (\n    <CLink className={classNames('nav-link', className)} {...rest} ref={forkedRef}>\n      {children}\n    </CLink>\n  )\n})\n\nCNavLink.propTypes = {\n  active: PropTypes.bool,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  idx: PropTypes.string,\n}\n\nCNavLink.displayName = 'CNavLink'\n"],"mappings":";;;;;;;;IAqBaA,QAAQ,GAA0DC,UAAU,CAGvF,UAACC,EAAqC,EAAEC,GAAG;EAAxC,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,GAAG,GAAAJ,EAAA,CAAAI,GAAA;IAAKC,IAAI,GAAnCC,MAAA,CAAAN,EAAA,kCAAqC,CAAF;EACpC,IAAMO,UAAU,GAAGC,MAAM,CAAoB,IAAI,CAAC;EAClD,IAAMC,SAAS,GAAGC,YAAY,CAACT,GAAG,EAAEM,UAAU,CAAC;EAEvC,IAAAI,eAAe,GAAKC,UAAU,CAACC,WAAW,CAAC,CAAAF,eAA5B;EAEvBG,SAAS,CAAC;;IACRT,IAAI,CAACU,MAAM,GAAG,CAAAf,EAAA,GAAAO,UAAU,CAACS,OAAO,MAAE,QAAAhB,EAAA,uBAAAA,EAAA,CAAAiB,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC;IAC9Dd,GAAG,IAAIC,IAAI,CAACU,MAAM,IAAIJ,eAAe,CAACP,GAAG,CAAC;GAC3C,EAAE,CAACC,IAAI,CAACU,MAAM,EAAEZ,SAAS,CAAC,CAAC;EAE5B,OACEgB,KAAA,CAAAC,aAAA,CAACC,KAAK,EAAAC,QAAA;IAACnB,SAAS,EAAEoB,UAAU,CAAC,UAAU,EAAEpB,SAAS;EAAC,CAAM,EAAAE,IAAI;IAAEJ,GAAG,EAAEQ;EAAS,CAC1E,GAAAP,QAAQ,CACH;AAEZ,CAAC;AAEDJ,QAAQ,CAAC0B,SAAS,GAAG;EACnBT,MAAM,EAAEU,SAAS,CAACC,IAAI;EACtBC,EAAE,EAAEF,SAAS,CAACG,WAAW;EACzB1B,QAAQ,EAAEuB,SAAS,CAACI,IAAI;EACxB1B,SAAS,EAAEsB,SAAS,CAACK,MAAM;EAC3BC,QAAQ,EAAEN,SAAS,CAACC,IAAI;EACxBtB,GAAG,EAAEqB,SAAS,CAACK;CAChB;AAEDhC,QAAQ,CAACkC,WAAW,GAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}