{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useState, useRef, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CNavContext } from '../sidebar/CSidebarNav.js';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\nvar isInVisibleGroup = function (el1, el2) {\n  var array1 = el1.toString().split('.');\n  var array2 = el2.toString().split('.');\n  return array2.every(function (item, index) {\n    return item === array1[index];\n  });\n};\nvar CNavGroup = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.as,\n    Component = _b === void 0 ? 'li' : _b,\n    className = _a.className,\n    compact = _a.compact,\n    idx = _a.idx,\n    toggler = _a.toggler,\n    visible = _a.visible,\n    rest = __rest(_a, [\"children\", \"as\", \"className\", \"compact\", \"idx\", \"toggler\", \"visible\"]);\n  var _c = useState(),\n    height = _c[0],\n    setHeight = _c[1];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var navItemsRef = useRef(null);\n  var _d = useContext(CNavContext),\n    visibleGroup = _d.visibleGroup,\n    setVisibleGroup = _d.setVisibleGroup;\n  var _e = useState(Boolean(visible || idx && visibleGroup && isInVisibleGroup(visibleGroup, idx))),\n    _visible = _e[0],\n    setVisible = _e[1];\n  useEffect(function () {\n    setVisible(Boolean(idx && visibleGroup && isInVisibleGroup(visibleGroup, idx)));\n  }, [visibleGroup]);\n  var handleTogglerOnCLick = function (event) {\n    event.preventDefault();\n    setVisibleGroup(_visible ? (idx === null || idx === void 0 ? void 0 : idx.toString().includes('.')) ? idx.slice(0, idx.lastIndexOf('.')) : '' : idx);\n    setVisible(!_visible);\n  };\n  var style = {\n    height: 0\n  };\n  var onEntering = function () {\n    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight);\n  };\n  var onEntered = function () {\n    setHeight('auto');\n  };\n  var onExit = function () {\n    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight);\n  };\n  var onExiting = function () {\n    var _a;\n    // @ts-expect-error reflow is necessary to get correct height of the element\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    (_a = navItemsRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight;\n    setHeight(0);\n  };\n  var onExited = function () {\n    setHeight(0);\n  };\n  var transitionStyles = {\n    entering: {\n      display: 'block',\n      height: height\n    },\n    entered: {\n      display: 'block',\n      height: height\n    },\n    exiting: {\n      display: 'block',\n      height: height\n    },\n    exited: {\n      height: height\n    },\n    unmounted: {}\n  };\n  var NavGroupItemsComponent = Component === 'li' ? 'ul' : 'div';\n  return React.createElement(Component, __assign({\n    className: classNames('nav-group', {\n      show: _visible\n    }, className)\n  }, rest, {\n    ref: ref\n  }), toggler && React.createElement(\"a\", {\n    className: \"nav-link nav-group-toggle\",\n    onClick: function (event) {\n      return handleTogglerOnCLick(event);\n    }\n  }, toggler), React.createElement(Transition, {\n    in: _visible,\n    nodeRef: navItemsRef,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    timeout: 300\n  }, function (state) {\n    return React.createElement(NavGroupItemsComponent, {\n      className: classNames('nav-group-items', {\n        compact: compact\n      }),\n      style: __assign(__assign({}, style), transitionStyles[state]),\n      ref: navItemsRef\n    }, children);\n  }));\n});\nCNavGroup.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  idx: PropTypes.string,\n  toggler: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  visible: PropTypes.bool\n};\nCNavGroup.displayName = 'CNavGroup';\nexport { CNavGroup };","map":{"version":3,"names":["isInVisibleGroup","el1","el2","array1","toString","split","array2","every","item","index","CNavGroup","forwardRef","_a","ref","children","_b","as","Component","className","compact","idx","toggler","visible","rest","__rest","_c","useState","height","setHeight","navItemsRef","useRef","_d","useContext","CNavContext","visibleGroup","setVisibleGroup","_e","Boolean","_visible","setVisible","useEffect","handleTogglerOnCLick","event","preventDefault","includes","slice","lastIndexOf","style","onEntering","current","scrollHeight","onEntered","onExit","onExiting","offsetHeight","onExited","transitionStyles","entering","display","entered","exiting","exited","unmounted","NavGroupItemsComponent","React","createElement","__assign","classNames","show","onClick","Transition","in","nodeRef","timeout","state","propTypes","PropTypes","elementType","node","string","bool","oneOfType","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\nav\\CNavGroup.tsx"],"sourcesContent":["import React, {\n  CSSProperties,\n  ElementType,\n  forwardRef,\n  HTMLAttributes,\n  ReactNode,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\nimport type { TransitionStatus } from 'react-transition-group'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nimport { CNavContext } from '../sidebar/CSidebarNav'\n\nexport interface CNavGroupProps extends HTMLAttributes<HTMLDivElement | HTMLLIElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   *\n   * @since 5.0.0\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Make nav group more compact by cutting all `padding` in half.\n   */\n  compact?: boolean\n  /**\n   * Set group toggler label.\n   */\n  toggler?: string | ReactNode\n  /**\n   * Show nav group items.\n   */\n  visible?: boolean\n  /**\n   * @ignore\n   */\n  idx?: string\n}\n\nconst isInVisibleGroup = (el1: string, el2: string) => {\n  const array1 = el1.toString().split('.')\n  const array2 = el2.toString().split('.')\n\n  return array2.every((item, index) => item === array1[index])\n}\n\nexport const CNavGroup: PolymorphicRefForwardingComponent<'li', CNavGroupProps> = forwardRef<\n  HTMLDivElement | HTMLLIElement,\n  CNavGroupProps\n>(({ children, as: Component = 'li', className, compact, idx, toggler, visible, ...rest }, ref) => {\n  const [height, setHeight] = useState<number | string>()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navItemsRef = useRef<any>(null)\n\n  const { visibleGroup, setVisibleGroup } = useContext(CNavContext)\n\n  const [_visible, setVisible] = useState(\n    Boolean(visible || (idx && visibleGroup && isInVisibleGroup(visibleGroup, idx))),\n  )\n\n  useEffect(() => {\n    setVisible(Boolean(idx && visibleGroup && isInVisibleGroup(visibleGroup, idx)))\n  }, [visibleGroup])\n\n  const handleTogglerOnCLick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    setVisibleGroup(\n      _visible ? (idx?.toString().includes('.') ? idx.slice(0, idx.lastIndexOf('.')) : '') : idx,\n    )\n    setVisible(!_visible)\n  }\n\n  const style: CSSProperties = {\n    height: 0,\n  }\n\n  const onEntering = () => {\n    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight)\n  }\n\n  const onEntered = () => {\n    setHeight('auto')\n  }\n\n  const onExit = () => {\n    navItemsRef.current && setHeight(navItemsRef.current.scrollHeight)\n  }\n\n  const onExiting = () => {\n    // @ts-expect-error reflow is necessary to get correct height of the element\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const reflow = navItemsRef.current?.offsetHeight\n    setHeight(0)\n  }\n\n  const onExited = () => {\n    setHeight(0)\n  }\n\n  const transitionStyles = {\n    entering: { display: 'block', height: height },\n    entered: { display: 'block', height: height },\n    exiting: { display: 'block', height: height },\n    exited: { height: height },\n    unmounted: {},\n  }\n\n  const NavGroupItemsComponent = Component === 'li' ? 'ul' : 'div'\n\n  return (\n    <Component\n      className={classNames('nav-group', { show: _visible }, className)}\n      {...rest}\n      ref={ref}\n    >\n      {toggler && (\n        <a className=\"nav-link nav-group-toggle\" onClick={(event) => handleTogglerOnCLick(event)}>\n          {toggler}\n        </a>\n      )}\n      <Transition\n        in={_visible}\n        nodeRef={navItemsRef}\n        onEntering={onEntering}\n        onEntered={onEntered}\n        onExit={onExit}\n        onExiting={onExiting}\n        onExited={onExited}\n        timeout={300}\n      >\n        {(state) => (\n          <NavGroupItemsComponent\n            className={classNames('nav-group-items', {\n              compact: compact,\n            })}\n            style={{\n              ...style,\n              ...transitionStyles[state as TransitionStatus],\n            }}\n            ref={navItemsRef}\n          >\n            {children}\n          </NavGroupItemsComponent>\n        )}\n      </Transition>\n    </Component>\n  )\n})\n\nCNavGroup.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  idx: PropTypes.string,\n  toggler: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  visible: PropTypes.bool,\n}\n\nCNavGroup.displayName = 'CNavGroup'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}