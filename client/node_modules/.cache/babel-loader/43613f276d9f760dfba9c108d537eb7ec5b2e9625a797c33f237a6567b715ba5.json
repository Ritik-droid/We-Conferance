{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { colorPropType } from '../../props.js';\nvar CCallout = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    color = _a.color,\n    rest = __rest(_a, [\"children\", \"className\", \"color\"]);\n  return React.createElement(\"div\", __assign({\n    className: classNames('callout', (_b = {}, _b[\"callout-\".concat(color)] = color, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCCallout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType\n};\nCCallout.displayName = 'CCallout';\nexport { CCallout };","map":{"version":3,"names":["CCallout","forwardRef","_a","ref","children","className","color","rest","__rest","React","createElement","__assign","classNames","_b","concat","propTypes","PropTypes","node","string","colorPropType","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\callout\\CCallout.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CCalloutProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n}\n\nexport const CCallout = forwardRef<HTMLDivElement, CCalloutProps>(\n  ({ children, className, color, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'callout',\n          {\n            [`callout-${color}`]: color,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCallout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n}\n\nCCallout.displayName = 'CCallout'\n"],"mappings":";;;;;IAoBaA,QAAQ,GAAGC,UAAU,CAChC,UAACC,EAAuC,EAAEC,GAAG;;EAA1C,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAKC,IAAI,GAArCC,MAAA,CAAAN,EAAA,oCAAuC,CAAF;EACpC,OACEO,KACE,CAAAC,aAAA,QAAAC,QAAA;IAAAN,SAAS,EAAEO,UAAU,CACnB,SAAS,GAAAC,EAAA,OAEPA,EAAA,CAAC,UAAW,CAAAC,MAAA,CAAAR,KAAK,CAAE,IAAGA,KAAK,E,KAE7BD,SAAS;EACV,CACG,EAAAE,IAAI,EACR;IAAAJ,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACL;AAEV,CAAC;AAGHJ,QAAQ,CAACe,SAAS,GAAG;EACnBX,QAAQ,EAAEY,SAAS,CAACC,IAAI;EACxBZ,SAAS,EAAEW,SAAS,CAACE,MAAM;EAC3BZ,KAAK,EAAEa;CACR;AAEDnB,QAAQ,CAACoB,WAAW,GAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}