{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CCard } from '../card/CCard.js';\nimport { CCardBody } from '../card/CCardBody.js';\nimport '../card/CCardFooter.js';\nimport '../card/CCardGroup.js';\nimport '../card/CCardHeader.js';\nimport '../card/CCardImage.js';\nimport '../card/CCardImageOverlay.js';\nimport '../card/CCardLink.js';\nimport '../card/CCardSubtitle.js';\nimport '../card/CCardText.js';\nimport '../card/CCardTitle.js';\nvar CWidgetStatsE = forwardRef(function (_a, ref) {\n  var chart = _a.chart,\n    className = _a.className,\n    title = _a.title,\n    value = _a.value,\n    rest = __rest(_a, [\"chart\", \"className\", \"title\", \"value\"]);\n  return React.createElement(CCard, __assign({\n    className: classNames(className)\n  }, rest, {\n    ref: ref\n  }), React.createElement(CCardBody, {\n    className: \"text-center\"\n  }, title && React.createElement(\"div\", {\n    className: \"text-body-secondary small text-uppercase fw-semibold\"\n  }, title), value && React.createElement(\"div\", {\n    className: \"fs-6 fw-semibold py-3\"\n  }, value), chart));\n});\nCWidgetStatsE.propTypes = {\n  children: PropTypes.node,\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number])\n};\nCWidgetStatsE.displayName = 'CWidgetStatsE';\nexport { CWidgetStatsE };","map":{"version":3,"names":["CWidgetStatsE","forwardRef","_a","ref","chart","className","title","value","rest","__rest","React","createElement","CCard","__assign","classNames","CCardBody","propTypes","children","PropTypes","node","oneOfType","string","number","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\widgets\\CWidgetStatsE.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody } from '../card'\n\nexport interface CWidgetStatsEProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsE = forwardRef<HTMLDivElement, CWidgetStatsEProps>(\n  ({ chart, className, title, value, ...rest }, ref) => {\n    return (\n      <CCard className={classNames(className)} {...rest} ref={ref}>\n        <CCardBody className=\"text-center\">\n          {title && (\n            <div className=\"text-body-secondary small text-uppercase fw-semibold\">{title}</div>\n          )}\n          {value && <div className=\"fs-6 fw-semibold py-3\">{value}</div>}\n          {chart}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsE.propTypes = {\n  children: PropTypes.node,\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsE.displayName = 'CWidgetStatsE'\n"],"mappings":";;;;;;;;;;;;;;;IAyBaA,aAAa,GAAGC,UAAU,CACrC,UAACC,EAA2C,EAAEC,GAAG;EAA9C,IAAAC,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAEC,KAAK,GAAAL,EAAA,CAAAK,KAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAP,EAAA,EAAzC,wCAA2C,CAAF;EACxC,OACEQ,KAAA,CAAAC,aAAA,CAACC,KAAK,EAAAC,QAAA;IAACR,SAAS,EAAES,UAAU,CAACT,SAAS;EAAC,CAAM,EAAAG,IAAI,EAAE;IAAAL,GAAG,EAAEA;EAAG,IACzDO,KAAA,CAAAC,aAAA,CAACI,SAAS;IAACV,SAAS,EAAC;EAAa,GAC/BC,KAAK,IACJI,KAAK,CAAAC,aAAA;IAAAN,SAAS,EAAC;EAAsD,GAAEC,KAAK,CAC7E,EACAC,KAAK,IAAIG,KAAK,CAAAC,aAAA;IAAAN,SAAS,EAAC;EAAuB,GAAEE,KAAK,CAAO,EAC7DH,KAAK,CACI,CACN;AAEZ,CAAC;AAGHJ,aAAa,CAACgB,SAAS,GAAG;EACxBC,QAAQ,EAAEC,SAAS,CAACC,IAAI;EACxBf,KAAK,EAAEc,SAAS,CAACE,SAAS,CAAC,CAACF,SAAS,CAACG,MAAM,EAAEH,SAAS,CAACC,IAAI,CAAC,CAAC;EAC9Dd,SAAS,EAAEa,SAAS,CAACG,MAAM;EAC3Bf,KAAK,EAAEY,SAAS,CAACE,SAAS,CAAC,CAACF,SAAS,CAACG,MAAM,EAAEH,SAAS,CAACC,IAAI,CAAC,CAAC;EAC9DZ,KAAK,EAAEW,SAAS,CAACE,SAAS,CAAC,CAACF,SAAS,CAACG,MAAM,EAAEH,SAAS,CAACC,IAAI,EAAED,SAAS,CAACI,MAAM,CAAC;CAChF;AAEDtB,aAAa,CAACuB,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}