{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useRef, useState, useEffect, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport isInViewport from '../../utils/isInViewport.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nvar CCarouselContext = createContext({});\nvar CCarousel = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.activeIndex,\n    activeIndex = _b === void 0 ? 0 : _b,\n    className = _a.className,\n    controls = _a.controls,\n    dark = _a.dark,\n    indicators = _a.indicators,\n    _c = _a.interval,\n    interval = _c === void 0 ? 5000 : _c,\n    onSlid = _a.onSlid,\n    onSlide = _a.onSlide,\n    _d = _a.pause,\n    pause = _d === void 0 ? 'hover' : _d,\n    _e = _a.touch,\n    touch = _e === void 0 ? true : _e,\n    transition = _a.transition,\n    _f = _a.wrap,\n    wrap = _f === void 0 ? true : _f,\n    rest = __rest(_a, [\"children\", \"activeIndex\", \"className\", \"controls\", \"dark\", \"indicators\", \"interval\", \"onSlid\", \"onSlide\", \"pause\", \"touch\", \"transition\", \"wrap\"]);\n  var carouselRef = useRef(null);\n  var forkedRef = useForkedRef(ref, carouselRef);\n  var data = useRef({}).current;\n  var _g = useState(activeIndex),\n    active = _g[0],\n    setActive = _g[1];\n  var _h = useState(false),\n    animating = _h[0],\n    setAnimating = _h[1];\n  var _j = useState(),\n    customInterval = _j[0],\n    setCustomInterval = _j[1];\n  var _k = useState('next'),\n    direction = _k[0],\n    setDirection = _k[1];\n  var _l = useState(0),\n    itemsNumber = _l[0],\n    setItemsNumber = _l[1];\n  var _m = useState(null),\n    touchPosition = _m[0],\n    setTouchPosition = _m[1];\n  var _o = useState(),\n    visible = _o[0],\n    setVisible = _o[1];\n  useEffect(function () {\n    setItemsNumber(Children.toArray(children).length);\n  });\n  useEffect(function () {\n    visible && cycle();\n  }, [visible]);\n  useEffect(function () {\n    !animating && cycle();\n    !animating && onSlid && onSlid(active, direction);\n    animating && onSlide && onSlide(active, direction);\n  }, [animating]);\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  });\n  var cycle = function () {\n    _pause();\n    if (!wrap && active === itemsNumber - 1) {\n      return;\n    }\n    if (typeof interval === 'number') {\n      data.timeout = setTimeout(function () {\n        return nextItemWhenVisible();\n      }, typeof customInterval === 'number' ? customInterval : interval);\n    }\n  };\n  var _pause = function () {\n    return pause && data.timeout && clearTimeout(data.timeout);\n  };\n  var nextItemWhenVisible = function () {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {\n      if (animating) {\n        return;\n      }\n      handleControlClick('next');\n    }\n  };\n  var handleControlClick = function (direction) {\n    if (animating) {\n      return;\n    }\n    setDirection(direction);\n    if (direction === 'next') {\n      active === itemsNumber - 1 ? setActive(0) : setActive(active + 1);\n    } else {\n      active === 0 ? setActive(itemsNumber - 1) : setActive(active - 1);\n    }\n  };\n  var handleIndicatorClick = function (index) {\n    if (active === index) {\n      return;\n    }\n    if (active < index) {\n      setDirection('next');\n      setActive(index);\n      return;\n    }\n    if (active > index) {\n      setDirection('prev');\n      setActive(index);\n    }\n  };\n  var handleScroll = function () {\n    if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n  var handleTouchMove = function (e) {\n    var touchDown = touchPosition;\n    if (touchDown === null) {\n      return;\n    }\n    var currentTouch = e.touches[0].clientX;\n    var diff = touchDown - currentTouch;\n    if (diff > 5) {\n      handleControlClick('next');\n    }\n    if (diff < -5) {\n      handleControlClick('prev');\n    }\n    setTouchPosition(null);\n  };\n  var handleTouchStart = function (e) {\n    var touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  };\n  return React.createElement(\"div\", __assign({\n    className: classNames('carousel slide', {\n      'carousel-fade': transition === 'crossfade'\n    }, className)\n  }, dark && {\n    'data-coreui-theme': 'dark'\n  }, {\n    onMouseEnter: _pause,\n    onMouseLeave: cycle\n  }, touch && {\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove\n  }, rest, {\n    ref: forkedRef\n  }), React.createElement(CCarouselContext.Provider, {\n    value: {\n      setAnimating: setAnimating,\n      setCustomInterval: setCustomInterval\n    }\n  }, indicators && React.createElement(\"div\", {\n    className: \"carousel-indicators\"\n  }, Array.from({\n    length: itemsNumber\n  }, function (_, i) {\n    return i;\n  }).map(function (index) {\n    return React.createElement(\"button\", __assign({\n      key: \"indicator\".concat(index),\n      onClick: function () {\n        !animating && handleIndicatorClick(index);\n      },\n      className: classNames({\n        active: active === index\n      }),\n      \"data-coreui-target\": \"\"\n    }, active === index && {\n      'aria-current': true\n    }, {\n      \"aria-label\": \"Slide \".concat(index + 1)\n    }));\n  })), React.createElement(\"div\", {\n    className: \"carousel-inner\"\n  }, Children.map(children, function (child, index) {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        active: active === index ? true : false,\n        direction: direction,\n        key: index\n      });\n    }\n    return;\n  })), controls && React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    className: \"carousel-control-prev\",\n    onClick: function () {\n      return handleControlClick('prev');\n    }\n  }, React.createElement(\"span\", {\n    className: \"carousel-control-prev-icon\",\n    \"aria-label\": \"prev\"\n  })), React.createElement(\"button\", {\n    className: \"carousel-control-next\",\n    onClick: function () {\n      return handleControlClick('next');\n    }\n  }, React.createElement(\"span\", {\n    className: \"carousel-control-next-icon\",\n    \"aria-label\": \"next\"\n  })))));\n});\nCCarousel.propTypes = {\n  activeIndex: PropTypes.number,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  controls: PropTypes.bool,\n  dark: PropTypes.bool,\n  indicators: PropTypes.bool,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  onSlid: PropTypes.func,\n  onSlide: PropTypes.func,\n  pause: PropTypes.oneOf([false, 'hover']),\n  touch: PropTypes.bool,\n  transition: PropTypes.oneOf(['slide', 'crossfade']),\n  wrap: PropTypes.bool\n};\nCCarousel.displayName = 'CCarousel';\nexport { CCarousel, CCarouselContext };","map":{"version":3,"names":["CCarouselContext","createContext","CCarousel","forwardRef","_a","ref","children","_b","activeIndex","className","controls","dark","indicators","_c","interval","onSlid","onSlide","_d","pause","_e","touch","transition","_f","wrap","rest","__rest","carouselRef","useRef","forkedRef","useForkedRef","data","current","_g","useState","active","setActive","_h","animating","setAnimating","_j","customInterval","setCustomInterval","_k","direction","setDirection","_l","itemsNumber","setItemsNumber","_m","touchPosition","setTouchPosition","_o","visible","setVisible","useEffect","Children","toArray","length","cycle","window","addEventListener","handleScroll","removeEventListener","_pause","timeout","setTimeout","nextItemWhenVisible","clearTimeout","document","hidden","isInViewport","handleControlClick","handleIndicatorClick","index","handleTouchMove","e","touchDown","currentTouch","touches","clientX","diff","handleTouchStart","React","createElement","__assign","classNames","onMouseEnter","onMouseLeave","onTouchStart","onTouchMove","Provider","value","Array","from","_","i","map","key","concat","onClick","child","isValidElement","cloneElement","Fragment","propTypes","PropTypes","number","node","string","bool","oneOfType","func","oneOf","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\carousel\\CCarousel.tsx"],"sourcesContent":["import React, {\n  Children,\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  TouchEvent,\n  useState,\n  useEffect,\n  useRef,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { isInViewport } from '../../utils'\nimport { useForkedRef } from '../../hooks'\n\nexport interface CCarouselProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * index of the active item.\n   */\n  activeIndex?: number\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Adding in the previous and next controls.\n   */\n  controls?: boolean\n  /**\n   * Add darker controls, indicators, and captions.\n   */\n  dark?: boolean\n  /**\n   * The amount of time to delay between automatically cycling an item. If false, carousel will not automatically cycle.\n   */\n  interval?: boolean | number\n  /**\n   * Adding indicators at the bottom of the carousel for each item.\n   */\n  indicators?: boolean\n  /**\n   * Callback fired when a slide transition end.\n   */\n  onSlid?: (active: number, direction: string) => void\n  /**\n   * Callback fired when a slide transition starts.\n   */\n  onSlide?: (active: number, direction: string) => void\n  /**\n   * If set to 'hover', pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on mouseleave. If set to false, hovering over the carousel won't pause it.\n   */\n  pause?: boolean | 'hover'\n  /**\n   * Set whether the carousel should support left/right swipe interactions on touchscreen devices.\n   *\n   * @since 4.5.0\n   */\n  touch?: boolean\n  /**\n   * Set type of the transition.\n   */\n  transition?: 'slide' | 'crossfade'\n  /**\n   * Set whether the carousel should cycle continuously or have hard stops.\n   */\n  wrap?: boolean\n}\n\ninterface DataType {\n  timeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface ContextProps {\n  setAnimating: (a: boolean) => void\n  setCustomInterval: (a: boolean | number) => void\n}\n\nexport const CCarouselContext = createContext({} as ContextProps)\n\nexport const CCarousel = forwardRef<HTMLDivElement, CCarouselProps>(\n  (\n    {\n      children,\n      activeIndex = 0,\n      className,\n      controls,\n      dark,\n      indicators,\n      interval = 5000,\n      onSlid,\n      onSlide,\n      pause = 'hover',\n      touch = true,\n      transition,\n      wrap = true,\n      ...rest\n    },\n    ref,\n  ) => {\n    const carouselRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, carouselRef)\n    const data = useRef<DataType>({}).current\n\n    const [active, setActive] = useState<number>(activeIndex)\n    const [animating, setAnimating] = useState<boolean>(false)\n    const [customInterval, setCustomInterval] = useState<boolean | number>()\n    const [direction, setDirection] = useState<string>('next')\n    const [itemsNumber, setItemsNumber] = useState<number>(0)\n    const [touchPosition, setTouchPosition] = useState<number | null>(null)\n    const [visible, setVisible] = useState<boolean>()\n\n    useEffect(() => {\n      setItemsNumber(Children.toArray(children).length)\n    })\n\n    useEffect(() => {\n      visible && cycle()\n    }, [visible])\n\n    useEffect(() => {\n      !animating && cycle()\n      !animating && onSlid && onSlid(active, direction)\n      animating && onSlide && onSlide(active, direction)\n    }, [animating])\n\n    useEffect(() => {\n      window.addEventListener('scroll', handleScroll)\n\n      return () => {\n        window.removeEventListener('scroll', handleScroll)\n      }\n    })\n\n    const cycle = () => {\n      _pause()\n      if (!wrap && active === itemsNumber - 1) {\n        return\n      }\n\n      if (typeof interval === 'number') {\n        data.timeout = setTimeout(\n          () => nextItemWhenVisible(),\n          typeof customInterval === 'number' ? customInterval : interval,\n        )\n      }\n    }\n    const _pause = () => pause && data.timeout && clearTimeout(data.timeout)\n\n    const nextItemWhenVisible = () => {\n      // Don't call next when the page isn't visible\n      // or the carousel or its parent isn't visible\n      if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {\n        if (animating) {\n          return\n        }\n        handleControlClick('next')\n      }\n    }\n\n    const handleControlClick = (direction: string) => {\n      if (animating) {\n        return\n      }\n      setDirection(direction)\n      if (direction === 'next') {\n        active === itemsNumber - 1 ? setActive(0) : setActive(active + 1)\n      } else {\n        active === 0 ? setActive(itemsNumber - 1) : setActive(active - 1)\n      }\n    }\n\n    const handleIndicatorClick = (index: number) => {\n      if (active === index) {\n        return\n      }\n\n      if (active < index) {\n        setDirection('next')\n        setActive(index)\n        return\n      }\n\n      if (active > index) {\n        setDirection('prev')\n        setActive(index)\n      }\n    }\n\n    const handleScroll = () => {\n      if (!document.hidden && carouselRef.current && isInViewport(carouselRef.current)) {\n        setVisible(true)\n      } else {\n        setVisible(false)\n      }\n    }\n\n    const handleTouchMove = (e: TouchEvent) => {\n      const touchDown = touchPosition\n\n      if (touchDown === null) {\n        return\n      }\n\n      const currentTouch = e.touches[0].clientX\n      const diff = touchDown - currentTouch\n\n      if (diff > 5) {\n        handleControlClick('next')\n      }\n\n      if (diff < -5) {\n        handleControlClick('prev')\n      }\n\n      setTouchPosition(null)\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      const touchDown = e.touches[0].clientX\n      setTouchPosition(touchDown)\n    }\n\n    return (\n      <div\n        className={classNames(\n          'carousel slide',\n          {\n            'carousel-fade': transition === 'crossfade',\n          },\n          className,\n        )}\n        {...(dark && { 'data-coreui-theme': 'dark' })}\n        onMouseEnter={_pause}\n        onMouseLeave={cycle}\n        {...(touch && { onTouchStart: handleTouchStart, onTouchMove: handleTouchMove })}\n        {...rest}\n        ref={forkedRef}\n      >\n        <CCarouselContext.Provider\n          value={{\n            setAnimating,\n            setCustomInterval,\n          }}\n        >\n          {indicators && (\n            <div className=\"carousel-indicators\">\n              {Array.from({ length: itemsNumber }, (_, i) => i).map((index) => {\n                return (\n                  <button\n                    key={`indicator${index}`}\n                    onClick={() => {\n                      !animating && handleIndicatorClick(index)\n                    }}\n                    className={classNames({\n                      active: active === index,\n                    })}\n                    data-coreui-target=\"\"\n                    {...(active === index && { 'aria-current': true })}\n                    aria-label={`Slide ${index + 1}`}\n                  />\n                )\n              })}\n            </div>\n          )}\n          <div className=\"carousel-inner\">\n            {Children.map(children, (child, index) => {\n              if (React.isValidElement(child)) {\n                return React.cloneElement(child as React.ReactElement<any>, {\n                  active: active === index ? true : false,\n                  direction: direction,\n                  key: index,\n                })\n              }\n              return\n            })}\n          </div>\n          {controls && (\n            <>\n              <button className=\"carousel-control-prev\" onClick={() => handleControlClick('prev')}>\n                <span className={`carousel-control-prev-icon`} aria-label=\"prev\" />\n              </button>\n              <button className=\"carousel-control-next\" onClick={() => handleControlClick('next')}>\n                <span className={`carousel-control-next-icon`} aria-label=\"next\" />\n              </button>\n            </>\n          )}\n        </CCarouselContext.Provider>\n      </div>\n    )\n  },\n)\n\nCCarousel.propTypes = {\n  activeIndex: PropTypes.number,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  controls: PropTypes.bool,\n  dark: PropTypes.bool,\n  indicators: PropTypes.bool,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  onSlid: PropTypes.func,\n  onSlide: PropTypes.func,\n  pause: PropTypes.oneOf([false, 'hover']),\n  touch: PropTypes.bool,\n  transition: PropTypes.oneOf(['slide', 'crossfade']),\n  wrap: PropTypes.bool,\n}\n\nCCarousel.displayName = 'CCarousel'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}