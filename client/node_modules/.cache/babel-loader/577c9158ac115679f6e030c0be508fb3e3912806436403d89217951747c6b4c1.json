{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from \"../createTheme/index.js\";\nimport styleFunctionSx from \"../styleFunctionSx/index.js\";\nexport const systemDefaultTheme = createTheme();\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction resolveTheme(themeId, theme, defaultTheme) {\n  return isObjectEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nconst PROCESSED_PROPS = Symbol('mui.processed_props');\nfunction attachTheme(props, themeId, defaultTheme) {\n  if (PROCESSED_PROPS in props) {\n    return props[PROCESSED_PROPS];\n  }\n  const processedProps = {\n    ...props,\n    theme: resolveTheme(themeId, props.theme, defaultTheme)\n  };\n  props[PROCESSED_PROPS] = processedProps;\n  processedProps[PROCESSED_PROPS] = processedProps;\n  return processedProps;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction processStyle(style, props) {\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(subStyle, props));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    const {\n      variants,\n      ...otherStyles\n    } = resolvedStyle;\n    let result = otherStyles;\n    let mergedState; // We might not need it, initalized lazily\n\n    /* eslint-disable no-labels */\n    variantLoop: for (let i = 0; i < variants.length; i += 1) {\n      const variant = variants[i];\n      if (typeof variant.props === 'function') {\n        mergedState ??= {\n          ...props,\n          ...props.ownerState,\n          ownerState: props.ownerState\n        };\n        if (!variant.props(mergedState)) {\n          continue;\n        }\n      } else {\n        for (const key in variant.props) {\n          if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n            continue variantLoop;\n          }\n        }\n      }\n      if (!Array.isArray(result)) {\n        result = [result];\n      }\n      if (typeof variant.style === 'function') {\n        mergedState ??= {\n          ...props,\n          ...props.ownerState,\n          ownerState: props.ownerState\n        };\n        result.push(variant.style(mergedState));\n      } else {\n        result.push(variant.style);\n      }\n    }\n    /* eslint-enable no-labels */\n\n    return result;\n  }\n  return resolvedStyle;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(attachTheme(props, themeId, defaultTheme));\n  };\n  systemSx.__mui_systemSx = true;\n  const styled = (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !style?.__mui_systemSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label,\n      ...options\n    });\n    const transformStyleArg = style => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof style === 'function' && style.__emotion_real !== style || isPlainObject(style)) {\n        return props => processStyle(style, attachTheme(props, themeId, defaultTheme));\n      }\n      return style;\n    };\n    const muiStyledResolver = (style, ...expressions) => {\n      let transformedStyle = transformStyleArg(style);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(themeId, props.theme, defaultTheme);\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          const propsWithTheme = attachTheme(props, themeId, defaultTheme);\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(styleOverrides[slotKey], propsWithTheme);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(themeId, props.theme, defaultTheme);\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyle({\n            variants: themeVariants\n          }, attachTheme(props, themeId, defaultTheme));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(style) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyle = [...style, ...placeholders];\n        transformedStyle.raw = [...style.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyle, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}","map":{"version":3,"names":["styledEngineStyled","internal_processStyles","processStyles","isPlainObject","capitalize","getDisplayName","createTheme","styleFunctionSx","systemDefaultTheme","shouldForwardProp","prop","resolveTheme","themeId","theme","defaultTheme","isObjectEmpty","PROCESSED_PROPS","Symbol","attachTheme","props","processedProps","defaultOverridesResolver","slot","_props","styles","processStyle","style","resolvedStyle","Array","isArray","flatMap","subStyle","variants","otherStyles","result","mergedState","variantLoop","i","length","variant","ownerState","key","push","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","__mui_systemSx","styled","tag","inputOptions","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","lowercaseFirstLetter","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","isStringTag","defaultStyledResolver","transformStyleArg","__emotion_real","muiStyledResolver","expressions","transformedStyle","expressionsWithDefaultTheme","map","components","styleOverrides","resolvedStyleOverrides","propsWithTheme","slotKey","themeVariants","numOfCustomFnsApplied","placeholders","fill","raw","Component","displayName","muiName","withConfig","object","_","charCodeAt","string","charAt","toLowerCase","slice"],"sources":["C:/Users/ritik/OneDrive/Desktop/Video-Call-App/client/node_modules/@mui/system/createStyled/createStyled.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from \"../createTheme/index.js\";\nimport styleFunctionSx from \"../styleFunctionSx/index.js\";\nexport const systemDefaultTheme = createTheme();\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction resolveTheme(themeId, theme, defaultTheme) {\n  return isObjectEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nconst PROCESSED_PROPS = Symbol('mui.processed_props');\nfunction attachTheme(props, themeId, defaultTheme) {\n  if (PROCESSED_PROPS in props) {\n    return props[PROCESSED_PROPS];\n  }\n  const processedProps = {\n    ...props,\n    theme: resolveTheme(themeId, props.theme, defaultTheme)\n  };\n  props[PROCESSED_PROPS] = processedProps;\n  processedProps[PROCESSED_PROPS] = processedProps;\n  return processedProps;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction processStyle(style, props) {\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(subStyle, props));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    const {\n      variants,\n      ...otherStyles\n    } = resolvedStyle;\n    let result = otherStyles;\n    let mergedState; // We might not need it, initalized lazily\n\n    /* eslint-disable no-labels */\n    variantLoop: for (let i = 0; i < variants.length; i += 1) {\n      const variant = variants[i];\n      if (typeof variant.props === 'function') {\n        mergedState ??= {\n          ...props,\n          ...props.ownerState,\n          ownerState: props.ownerState\n        };\n        if (!variant.props(mergedState)) {\n          continue;\n        }\n      } else {\n        for (const key in variant.props) {\n          if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n            continue variantLoop;\n          }\n        }\n      }\n      if (!Array.isArray(result)) {\n        result = [result];\n      }\n      if (typeof variant.style === 'function') {\n        mergedState ??= {\n          ...props,\n          ...props.ownerState,\n          ownerState: props.ownerState\n        };\n        result.push(variant.style(mergedState));\n      } else {\n        result.push(variant.style);\n      }\n    }\n    /* eslint-enable no-labels */\n\n    return result;\n  }\n  return resolvedStyle;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(attachTheme(props, themeId, defaultTheme));\n  };\n  systemSx.__mui_systemSx = true;\n  const styled = (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !style?.__mui_systemSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label,\n      ...options\n    });\n    const transformStyleArg = style => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof style === 'function' && style.__emotion_real !== style || isPlainObject(style)) {\n        return props => processStyle(style, attachTheme(props, themeId, defaultTheme));\n      }\n      return style;\n    };\n    const muiStyledResolver = (style, ...expressions) => {\n      let transformedStyle = transformStyleArg(style);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(themeId, props.theme, defaultTheme);\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          const propsWithTheme = attachTheme(props, themeId, defaultTheme);\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(styleOverrides[slotKey], propsWithTheme);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(themeId, props.theme, defaultTheme);\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyle({\n            variants: themeVariants\n          }, attachTheme(props, themeId, defaultTheme));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(style) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyle = [...style, ...placeholders];\n        transformedStyle.raw = [...style.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyle, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}