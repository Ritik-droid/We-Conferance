{"ast":null,"code":"var pretifyName = function (name) {\n  return name.replace(/[-_.]/g, ' ').replace(/ +/g, ' ').replace(/([a-z0-9])([A-Z])/g, '$1 $2').split(' ').map(function (word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(' ');\n};\nvar getColumnLabel = function (column) {\n  var _a;\n  return typeof column === 'object' ? (_a = column.label) !== null && _a !== void 0 ? _a : pretifyName(column.key) : pretifyName(column);\n};\nvar getColumnNames = function (columns, items) {\n  return columns ? columns.map(function (column) {\n    return typeof column === 'object' ? column.key : column;\n  }) : items && getColumnNamesFromItems(items);\n};\nvar getColumnNamesFromItems = function (items) {\n  return Object.keys(items[0] || {}).filter(function (el) {\n    return el.charAt(0) !== '_';\n  });\n};\nexport { getColumnLabel, getColumnNames, getColumnNamesFromItems, pretifyName };","map":{"version":3,"names":["pretifyName","name","replace","split","map","word","charAt","toUpperCase","slice","join","getColumnLabel","column","_a","label","key","getColumnNames","columns","items","getColumnNamesFromItems","Object","keys","filter","el"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\table\\utils.ts"],"sourcesContent":["import type { Column, Item } from './types'\n\nexport const pretifyName = (name: string) => {\n  return name\n    .replace(/[-_.]/g, ' ')\n    .replace(/ +/g, ' ')\n    .replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n    .split(' ')\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n}\n\nexport const getColumnLabel = (column: Column | string) =>\n  typeof column === 'object' ? column.label ?? pretifyName(column.key) : pretifyName(column)\n\nexport const getColumnNames = (columns: (string | Column)[] | undefined, items?: Item[]) =>\n  columns\n    ? columns.map((column: Column | string) => {\n        return typeof column === 'object' ? column.key : column\n      })\n    : items && getColumnNamesFromItems(items)\n\nexport const getColumnNamesFromItems = (items: Item[]) =>\n  Object.keys(items[0] || {}).filter((el) => el.charAt(0) !== '_')\n"],"mappings":"AAEO,IAAMA,WAAW,GAAG,SAAAA,CAACC,IAAY;EACtC,OAAOA,IAAI,CACRC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CACtCC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,UAACC,IAAI;IAAK,OAAAA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;EAA5C,CAA4C,CAAC,CAC3DC,IAAI,CAAC,GAAG,CAAC;AACd;AAEO,IAAMC,cAAc,GAAG,SAAAA,CAACC,MAAuB;EAAA,IAAAC,EAAA;EACpD,cAAOD,MAAM,KAAK,QAAQ,GAAG,CAAAC,EAAA,GAAAD,MAAM,CAACE,KAAK,cAAAD,EAAA,cAAAA,EAAA,GAAIZ,WAAW,CAACW,MAAM,CAACG,GAAG,CAAC,GAAGd,WAAW,CAACW,MAAM,CAAC;AAAA;AAE/E,IAAAI,cAAc,GAAG,SAAAA,CAACC,OAAwC,EAAEC,KAAc;EACrF,OAAAD,OAAO,GACHA,OAAO,CAACZ,GAAG,CAAC,UAACO,MAAuB;IAClC,OAAO,OAAOA,MAAM,KAAK,QAAQ,GAAGA,MAAM,CAACG,GAAG,GAAGH,MAAM;EACzD,CAAC,CAAC,GACFM,KAAK,IAAIC,uBAAuB,CAACD,KAAK,CAAC;AAJ3C;AAMK,IAAMC,uBAAuB,GAAG,SAAAA,CAACD,KAAa;EACnD,OAAAE,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAACI,MAAM,CAAC,UAACC,EAAE,EAAK;IAAA,OAAAA,EAAE,CAAChB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;EAApB,CAAoB,CAAC;AAAhE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}