{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n    rows = props.rows,\n    rowsMax = props.rowsMax,\n    rowsMinProp = props.rowsMin,\n    maxRowsProp = props.maxRows,\n    _props$minRows = props.minRows,\n    minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows,\n    style = props.style,\n    value = props.value,\n    other = (0, _objectWithoutProperties2.default)(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  var maxRows = maxRowsProp || rowsMax;\n  var minRows = rows || rowsMinProp || minRowsProp;\n  var _React$useRef = React.useRef(value != null),\n    isControlled = _React$useRef.current;\n  var inputRef = React.useRef(null);\n  var handleRef = (0, _useForkRef.default)(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n  var _React$useState = React.useState({}),\n    state = _React$useState[0],\n    setState = _React$useState[1];\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", (0, _extends2.default)({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n\n    rows: minRows,\n    style: (0, _extends2.default)({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: (0, _extends2.default)({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `maxRows` instead.'),\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_extends2","_objectWithoutProperties2","React","_propTypes","_debounce","_useForkRef","_deprecatedPropType","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","useLayoutEffect","useEffect","styles","shadow","visibility","position","overflow","height","top","left","transform","TextareaAutosize","forwardRef","props","ref","onChange","rows","rowsMax","rowsMinProp","rowsMin","maxRowsProp","maxRows","_props$minRows","minRows","minRowsProp","style","other","_React$useRef","useRef","isControlled","current","inputRef","handleRef","shadowRef","renders","_React$useState","useState","state","setState","syncHeight","useCallback","input","getComputedStyle","inputShallow","width","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","process","env","NODE_ENV","console","error","join","handleResize","addEventListener","clear","removeEventListener","handleChange","event","createElement","Fragment","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf","_default"],"sources":["C:/Users/ritik/OneDrive/Desktop/Video-Call-App/client/node_modules/@material-ui/core/TextareaAutosize/TextareaAutosize.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMinProp = props.rowsMin,\n      maxRowsProp = props.maxRows,\n      _props$minRows = props.minRows,\n      minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  var maxRows = maxRowsProp || rowsMax;\n  var minRows = rows || rowsMinProp || minRowsProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = (0, _useForkRef.default)(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", (0, _extends2.default)({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: (0, _extends2.default)({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: (0, _extends2.default)({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `maxRows` instead.'),\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}