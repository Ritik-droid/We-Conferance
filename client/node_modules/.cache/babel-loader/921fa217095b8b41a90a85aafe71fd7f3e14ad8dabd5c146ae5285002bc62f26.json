{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CToastClose } from './CToastClose.js';\nvar CToastHeader = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    closeButton = _a.closeButton,\n    rest = __rest(_a, [\"children\", \"className\", \"closeButton\"]);\n  return React.createElement(\"div\", __assign({\n    className: classNames('toast-header', className)\n  }, rest, {\n    ref: ref\n  }), children, closeButton && React.createElement(CToastClose, null));\n});\nCToastHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeButton: PropTypes.bool\n};\nCToastHeader.displayName = 'CToastHeader';\nexport { CToastHeader };","map":{"version":3,"names":["CToastHeader","forwardRef","_a","ref","children","className","closeButton","rest","__rest","React","createElement","__assign","classNames","CToastClose","propTypes","PropTypes","node","string","bool","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\toast\\CToastHeader.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CToastClose } from './CToastClose'\n\nexport interface CToastHeaderProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Automatically add a close button to the header.\n   */\n  closeButton?: boolean\n}\n\nexport const CToastHeader = forwardRef<HTMLDivElement, CToastHeaderProps>(\n  ({ children, className, closeButton, ...rest }, ref) => {\n    return (\n      <div className={classNames('toast-header', className)} {...rest} ref={ref}>\n        {children}\n        {closeButton && <CToastClose />}\n      </div>\n    )\n  },\n)\n\nCToastHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n}\n\nCToastHeader.displayName = 'CToastHeader'\n"],"mappings":";;;;;IAiBaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAA6C,EAAEC,GAAG;EAAhD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,WAAW,GAAAJ,EAAA,CAAAI,WAAA;IAAKC,IAAI,GAA3CC,MAAA,CAAAN,EAAA,0CAA6C,CAAF;EAC1C,OACEO,KAAA,CAAAC,aAAA,QAAAC,QAAA;IAAKN,SAAS,EAAEO,UAAU,CAAC,cAAc,EAAEP,SAAS;EAAC,CAAM,EAAAE,IAAI,EAAE;IAAAJ,GAAG,EAAEA;EAAG,IACtEC,QAAQ,EACRE,WAAW,IAAIG,KAAC,CAAAC,aAAA,CAAAG,WAAW,EAAG,MAC3B;AAEV,CAAC;AAGHb,YAAY,CAACc,SAAS,GAAG;EACvBV,QAAQ,EAAEW,SAAS,CAACC,IAAI;EACxBX,SAAS,EAAEU,SAAS,CAACE,MAAM;EAC3BX,WAAW,EAAES,SAAS,CAACG;CACxB;AAEDlB,YAAY,CAACmB,WAAW,GAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}