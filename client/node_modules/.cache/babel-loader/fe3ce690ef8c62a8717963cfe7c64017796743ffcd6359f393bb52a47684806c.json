{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CBreadcrumbItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    active = _a.active,\n    className = _a.className,\n    href = _a.href,\n    rest = __rest(_a, [\"children\", \"active\", \"className\", \"href\"]);\n  return React.createElement(\"li\", __assign({\n    className: classNames('breadcrumb-item', {\n      active: active\n    }, className)\n  }, active && {\n    'aria-current': 'page'\n  }, rest, {\n    ref: ref\n  }), href ? React.createElement(CLink, {\n    href: href\n  }, children) : children);\n});\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string\n};\nCBreadcrumbItem.displayName = 'CBreadcrumbItem';\nexport { CBreadcrumbItem };","map":{"version":3,"names":["CBreadcrumbItem","forwardRef","_a","ref","children","active","className","href","rest","__rest","React","createElement","__assign","classNames","CLink","propTypes","PropTypes","bool","node","string","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/breadcrumb/CBreadcrumbItem.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nexport interface CBreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The `href` attribute for the inner `<CLink>` component.\n   */\n  href?: string\n}\n\nexport const CBreadcrumbItem = forwardRef<HTMLLIElement, CBreadcrumbItemProps>(\n  ({ children, active, className, href, ...rest }, ref) => {\n    return (\n      <li\n        className={classNames(\n          'breadcrumb-item',\n          {\n            active: active,\n          },\n          className,\n        )}\n        {...(active && { 'aria-current': 'page' })}\n        {...rest}\n        ref={ref}\n      >\n        {href ? <CLink href={href}>{children}</CLink> : children}\n      </li>\n    )\n  },\n)\n\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string,\n}\n\nCBreadcrumbItem.displayName = 'CBreadcrumbItem'\n"],"mappings":";;;;;IAqBaA,eAAe,GAAGC,UAAU,CACvC,UAACC,EAA8C,EAAEC,GAAG;EAAjD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,IAAI,GAAAL,EAAA,CAAAK,IAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAP,EAAA,EAA5C,2CAA8C,CAAF;EAC3C,OACEQ,KACE,CAAAC,aAAA,OAAAC,QAAA;IAAAN,SAAS,EAAEO,UAAU,CACnB,iBAAiB,EACjB;MACER,MAAM,EAAEA;IACT,GACDC,SAAS;EACV,GACID,MAAM,IAAI;IAAE,cAAc,EAAE;EAAM,CAAE,EACrCG,IAAI,EACR;IAAAL,GAAG,EAAEA;EAAG,IAEPI,IAAI,GAAGG,KAAA,CAAAC,aAAA,CAACG,KAAK;IAACP,IAAI,EAAEA;EAAI,CAAG,EAAAH,QAAQ,CAAS,GAAGA,QAAQ,CACrD;AAET,CAAC;AAGHJ,eAAe,CAACe,SAAS,GAAG;EAC1BV,MAAM,EAAEW,SAAS,CAACC,IAAI;EACtBb,QAAQ,EAAEY,SAAS,CAACE,IAAI;EACxBZ,SAAS,EAAEU,SAAS,CAACG,MAAM;EAC3BZ,IAAI,EAAES,SAAS,CAACG;CACjB;AAEDnB,eAAe,CAACoB,WAAW,GAAG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}