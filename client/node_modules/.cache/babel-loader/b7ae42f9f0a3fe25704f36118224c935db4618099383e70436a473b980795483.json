{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CDropdownItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.as,\n    as = _b === void 0 ? 'a' : _b,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n  return React.createElement(CLink, __assign({\n    className: classNames('dropdown-item', className),\n    as: as\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCDropdownItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCDropdownItem.displayName = 'CDropdownItem';\nexport { CDropdownItem };","map":{"version":3,"names":["CDropdownItem","forwardRef","_a","ref","children","_b","as","className","rest","__rest","React","createElement","CLink","__assign","classNames","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\dropdown\\CDropdownItem.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink, CLinkProps } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CDropdownItemProps extends CLinkProps {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CDropdownItem: PolymorphicRefForwardingComponent<'a', CDropdownItemProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CDropdownItemProps\n>(({ children, as = 'a', className, ...rest }, ref) => {\n  return (\n    <CLink className={classNames('dropdown-item', className)} as={as} {...rest} ref={ref}>\n      {children}\n    </CLink>\n  )\n})\n\nCDropdownItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCDropdownItem.displayName = 'CDropdownItem'\n"],"mappings":";;;;;IAeaA,aAAa,GAA+DC,UAAU,CAGjG,UAACC,EAA0C,EAAEC,GAAG;EAA7C,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAQ,GAAAH,EAAA,CAAAI,EAAA;IAARA,EAAE,GAAGD,EAAA,iBAAG,GAAAA,EAAA;IAAEE,SAAS,GAAAL,EAAA,CAAAK,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAP,EAAA,EAAxC,+BAA0C,CAAF;EACzC,OACEQ,KAAC,CAAAC,aAAA,CAAAC,KAAK,EAACC,QAAA;IAAAN,SAAS,EAAEO,UAAU,CAAC,eAAe,EAAEP,SAAS,CAAC;IAAED,EAAE,EAAEA;EAAE,CAAM,EAAAE,IAAI,EAAE;IAAAL,GAAG,EAAEA;EAAG,CACjF,GAAAC,QAAQ,CACH;AAEZ,CAAC;AAEDJ,aAAa,CAACe,SAAS,GAAG;EACxBT,EAAE,EAAEU,SAAS,CAACC,WAAW;EACzBb,QAAQ,EAAEY,SAAS,CAACE,IAAI;EACxBX,SAAS,EAAES,SAAS,CAACG;CACtB;AAEDnB,aAAa,CAACoB,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}