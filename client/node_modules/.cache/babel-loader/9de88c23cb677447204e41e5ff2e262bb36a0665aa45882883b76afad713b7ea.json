{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CNavLink } from './CNavLink.js';\nvar CNavItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.as,\n    Component = _b === void 0 ? 'li' : _b,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n  return React.createElement(Component, {\n    className: classNames('nav-item', className),\n    ref: ref\n  }, rest.href || rest.to ? React.createElement(CNavLink, __assign({\n    className: className\n  }, rest), children) : children);\n});\nCNavItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCNavItem.displayName = 'CNavItem';\nexport { CNavItem };","map":{"version":3,"names":["CNavItem","forwardRef","_a","ref","children","_b","as","Component","className","rest","__rest","React","createElement","classNames","href","to","CNavLink","__assign","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/nav/CNavItem.tsx"],"sourcesContent":["import React, { ElementType, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CNavLink, CNavLinkProps } from './CNavLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CNavItemProps extends Omit<CNavLinkProps, 'component'> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   *\n   * @since 5.0.0\n   */\n  as?: ElementType\n}\n\nexport const CNavItem: PolymorphicRefForwardingComponent<'li', CNavItemProps> = forwardRef<\n  HTMLLIElement,\n  CNavItemProps\n>(({ children, as: Component = 'li', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('nav-item', className)} ref={ref}>\n      {rest.href || rest.to ? (\n        <CNavLink className={className} {...rest}>\n          {children}\n        </CNavLink>\n      ) : (\n        children\n      )}\n    </Component>\n  )\n})\n\nCNavItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCNavItem.displayName = 'CNavItem'\n"],"mappings":";;;;;IAiBaA,QAAQ,GAA2DC,UAAU,CAGxF,UAACC,EAAsD,EAAEC,GAAG;EAAzD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAoB,GAAAH,EAAA,CAAAI,EAAA;IAAhBC,SAAS,GAAGF,EAAA,kBAAI,GAAAA,EAAA;IAAEG,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAApD,+BAAsD,CAAF;EACrD,OACES,KAAA,CAAAC,aAAA,CAACL,SAAS;IAACC,SAAS,EAAEK,UAAU,CAAC,UAAU,EAAEL,SAAS,CAAC;IAAEL,GAAG,EAAEA;EAAG,GAC9DM,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACM,EAAE,GACnBJ,KAAC,CAAAC,aAAA,CAAAI,QAAQ,EAAAC,QAAA;IAACT,SAAS,EAAEA;EAAS,GAAMC,IAAI,GACrCL,QAAQ,CACA,GAEXA,QACD,CACS;AAEhB,CAAC;AAEDJ,QAAQ,CAACkB,SAAS,GAAG;EACnBZ,EAAE,EAAEa,SAAS,CAACC,WAAW;EACzBhB,QAAQ,EAAEe,SAAS,CAACE,IAAI;EACxBb,SAAS,EAAEW,SAAS,CAACG;CACtB;AAEDtB,QAAQ,CAACuB,WAAW,GAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}