{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CAccordionItemContext } from './CAccordionItem.js';\nimport { CCollapse } from '../collapse/CCollapse.js';\nvar CAccordionBody = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"className\"]);\n  var visible = useContext(CAccordionItemContext).visible;\n  return React.createElement(CCollapse, {\n    className: \"accordion-collapse\",\n    visible: visible\n  }, React.createElement(\"div\", __assign({\n    className: classNames('accordion-body', className)\n  }, rest, {\n    ref: ref\n  }), children));\n});\nCAccordionBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCAccordionBody.displayName = 'CAccordionBody';\nexport { CAccordionBody };","map":{"version":3,"names":["CAccordionBody","forwardRef","_a","ref","children","className","rest","__rest","visible","useContext","CAccordionItemContext","React","createElement","CCollapse","__assign","classNames","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\accordion\\CAccordionBody.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CAccordionItemContext } from './CAccordionItem'\n\nimport { CCollapse } from './../collapse/CCollapse'\n\nexport interface CAccordionBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CAccordionBody = forwardRef<HTMLDivElement, CAccordionBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    const { visible } = useContext(CAccordionItemContext)\n\n    return (\n      <CCollapse className=\"accordion-collapse\" visible={visible}>\n        <div className={classNames('accordion-body', className)} {...rest} ref={ref}>\n          {children}\n        </div>\n      </CCollapse>\n    )\n  },\n)\n\nCAccordionBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCAccordionBody.displayName = 'CAccordionBody'\n"],"mappings":";;;;;;IAeaA,cAAc,GAAGC,UAAU,CACtC,UAACC,EAAgC,EAAEC,GAAG;EAAnC,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAKC,IAAI,GAA9BC,MAAA,CAAAL,EAAA,2BAAgC,CAAF;EACrB,IAAAM,OAAO,GAAKC,UAAU,CAACC,qBAAqB,CAAC,CAAAF,OAAtC;EAEf,OACEG,KAAC,CAAAC,aAAA,CAAAC,SAAS,EAAC;IAAAR,SAAS,EAAC,oBAAoB;IAACG,OAAO,EAAEA;EAAO,GACxDG,KAAA,CAAAC,aAAA,QAAAE,QAAA;IAAKT,SAAS,EAAEU,UAAU,CAAC,gBAAgB,EAAEV,SAAS;EAAC,GAAMC,IAAI,EAAE;IAAAH,GAAG,EAAEA;EAAG,IACxEC,QAAQ,CACL,CACI;AAEhB,CAAC;AAGHJ,cAAc,CAACgB,SAAS,GAAG;EACzBZ,QAAQ,EAAEa,SAAS,CAACC,IAAI;EACxBb,SAAS,EAAEY,SAAS,CAACE;CACtB;AAEDnB,cAAc,CAACoB,WAAW,GAAG,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}