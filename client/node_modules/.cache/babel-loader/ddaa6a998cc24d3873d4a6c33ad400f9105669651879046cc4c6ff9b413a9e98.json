{"ast":null,"code":"var getAlignmentClassNames = function (alignment) {\n  var classNames = [];\n  if (typeof alignment === 'object') {\n    for (var key in alignment) {\n      classNames.push(\"dropdown-menu\".concat(key === 'xs' ? '' : \"-\".concat(key), \"-\").concat(alignment[key]));\n    }\n  }\n  if (typeof alignment === 'string') {\n    classNames.push(\"dropdown-menu-\".concat(alignment));\n  }\n  return classNames;\n};\nvar getPlacement = function (placement, direction, alignment, isRTL) {\n  var _placement = placement;\n  if (direction === 'dropup') {\n    _placement = isRTL ? 'top-end' : 'top-start';\n  }\n  if (direction === 'dropup-center') {\n    _placement = 'top';\n  }\n  if (direction === 'dropend') {\n    _placement = isRTL ? 'left-start' : 'right-start';\n  }\n  if (direction === 'dropstart') {\n    _placement = isRTL ? 'right-start' : 'left-start';\n  }\n  if (alignment === 'end') {\n    _placement = isRTL ? 'bottom-start' : 'bottom-end';\n  }\n  return _placement;\n};\nexport { getAlignmentClassNames, getPlacement };","map":{"version":3,"names":["getAlignmentClassNames","alignment","classNames","key","push","concat","getPlacement","placement","direction","isRTL","_placement"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\dropdown\\utils.ts"],"sourcesContent":["import type { Placement } from '@popperjs/core'\nimport type { Placements } from '../../types'\nimport type { Alignments, Breakpoints } from './types'\n\nexport const getAlignmentClassNames = (alignment: Alignments) => {\n  const classNames: string[] = []\n  if (typeof alignment === 'object') {\n    for (const key in alignment) {\n      classNames.push(\n        `dropdown-menu${key === 'xs' ? '' : `-${key}`}-${alignment[key as keyof Breakpoints]}`,\n      )\n    }\n  }\n\n  if (typeof alignment === 'string') {\n    classNames.push(`dropdown-menu-${alignment}`)\n  }\n\n  return classNames\n}\n\nexport const getPlacement = (\n  placement: Placement,\n  direction: string | undefined,\n  alignment: Alignments | string | undefined,\n  isRTL: boolean,\n): Placements => {\n  let _placement = placement\n\n  if (direction === 'dropup') {\n    _placement = isRTL ? 'top-end' : 'top-start'\n  }\n\n  if (direction === 'dropup-center') {\n    _placement = 'top'\n  }\n\n  if (direction === 'dropend') {\n    _placement = isRTL ? 'left-start' : 'right-start'\n  }\n\n  if (direction === 'dropstart') {\n    _placement = isRTL ? 'right-start' : 'left-start'\n  }\n\n  if (alignment === 'end') {\n    _placement = isRTL ? 'bottom-start' : 'bottom-end'\n  }\n\n  return _placement\n}\n"],"mappings":"AAIO,IAAMA,sBAAsB,GAAG,SAAAA,CAACC,SAAqB;EAC1D,IAAMC,UAAU,GAAa,EAAE;EAC/B,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;IACjC,KAAK,IAAME,GAAG,IAAIF,SAAS,EAAE;MAC3BC,UAAU,CAACE,IAAI,CACb,eAAgB,CAAAC,MAAA,CAAAF,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,IAAAE,MAAA,CAAIF,GAAG,CAAE,EAAI,KAAAE,MAAA,CAAAJ,SAAS,CAACE,GAAwB,CAAC,CAAE,CACvF;;;EAIL,IAAI,OAAOF,SAAS,KAAK,QAAQ,EAAE;IACjCC,UAAU,CAACE,IAAI,CAAC,iBAAAC,MAAA,CAAiBJ,SAAS,CAAE,CAAC;;EAG/C,OAAOC,UAAU;AACnB;AAEa,IAAAI,YAAY,GAAG,SAAAA,CAC1BC,SAAoB,EACpBC,SAA6B,EAC7BP,SAA0C,EAC1CQ,KAAc;EAEd,IAAIC,UAAU,GAAGH,SAAS;EAE1B,IAAIC,SAAS,KAAK,QAAQ,EAAE;IAC1BE,UAAU,GAAGD,KAAK,GAAG,SAAS,GAAG,WAAW;;EAG9C,IAAID,SAAS,KAAK,eAAe,EAAE;IACjCE,UAAU,GAAG,KAAK;;EAGpB,IAAIF,SAAS,KAAK,SAAS,EAAE;IAC3BE,UAAU,GAAGD,KAAK,GAAG,YAAY,GAAG,aAAa;;EAGnD,IAAID,SAAS,KAAK,WAAW,EAAE;IAC7BE,UAAU,GAAGD,KAAK,GAAG,aAAa,GAAG,YAAY;;EAGnD,IAAIR,SAAS,KAAK,KAAK,EAAE;IACvBS,UAAU,GAAGD,KAAK,GAAG,cAAc,GAAG,YAAY;;EAGpD,OAAOC,UAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}