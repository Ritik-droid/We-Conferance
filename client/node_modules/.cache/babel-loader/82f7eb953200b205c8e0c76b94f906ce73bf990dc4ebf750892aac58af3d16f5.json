{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar CTableResponsiveWrapper = function (_a) {\n  var children = _a.children,\n    responsive = _a.responsive,\n    rest = __rest(_a, [\"children\", \"responsive\"]);\n  return responsive ? React.createElement(\"div\", __assign({\n    className: typeof responsive === 'boolean' ? 'table-responsive' : \"table-responsive-\".concat(responsive)\n  }, rest), children) : React.createElement(React.Fragment, null, children);\n};\nCTableResponsiveWrapper.propTypes = {\n  children: PropTypes.node,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])])\n};\nCTableResponsiveWrapper.displayName = 'CTableResponsiveWrapper';\nexport { CTableResponsiveWrapper };","map":{"version":3,"names":["CTableResponsiveWrapper","_a","children","responsive","rest","__rest","React","createElement","__assign","className","concat","Fragment","propTypes","PropTypes","node","oneOfType","bool","oneOf","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\table\\CTableResponsiveWrapper.tsx"],"sourcesContent":["import React, { FC, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\n\nexport interface CTableResponsiveWrapperProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Make any table responsive across all viewports or pick a maximum breakpoint with which to have a responsive table up to.\n   */\n  responsive?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n}\n\nexport const CTableResponsiveWrapper: FC<CTableResponsiveWrapperProps> = ({\n  children,\n  responsive,\n  ...rest\n}) => {\n  return responsive ? (\n    <div\n      className={\n        typeof responsive === 'boolean' ? 'table-responsive' : `table-responsive-${responsive}`\n      }\n      {...rest}\n    >\n      {children}\n    </div>\n  ) : (\n    <>{children}</>\n  )\n}\n\nCTableResponsiveWrapper.propTypes = {\n  children: PropTypes.node,\n  responsive: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n}\n\nCTableResponsiveWrapper.displayName = 'CTableResponsiveWrapper'\n"],"mappings":";;;AAUO,IAAMA,uBAAuB,GAAqC,SAAAA,CAACC,EAIzE;EAHC,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,UAAU,GAAAF,EAAA,CAAAE,UAAA;IACPC,IAAI,GAHiEC,MAAA,CAAAJ,EAAA,4BAIzE,CADQ;EAEP,OAAOE,UAAU,GACfG,KAAA,CAAAC,aAAA,QAAAC,QAAA;IACEC,SAAS,EACP,OAAON,UAAU,KAAK,SAAS,GAAG,kBAAkB,GAAG,oBAAAO,MAAA,CAAoBP,UAAU;EAAE,GAErFC,IAAI,GAEPF,QAAQ,CACL,GAENI,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAK,QAAA,QAAGT,QAAQ,CACZ;AACH;AAEAF,uBAAuB,CAACY,SAAS,GAAG;EAClCV,QAAQ,EAAEW,SAAS,CAACC,IAAI;EACxBX,UAAU,EAAEU,SAAS,CAACE,SAAS,CAAC,CAC9BF,SAAS,CAACG,IAAI,EACdH,SAAS,CAACI,KAAK,CAAoC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CACpF;CACF;AAEDjB,uBAAuB,CAACkB,WAAW,GAAG,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}