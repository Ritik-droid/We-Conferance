{"ast":null,"code":"var getTransitionDurationFromElement = function (element) {\n  if (!element) {\n    return 0;\n  }\n  // Get transition-duration of the element\n  var _a = window.getComputedStyle(element),\n    transitionDuration = _a.transitionDuration,\n    transitionDelay = _a.transitionDelay;\n  var floatTransitionDuration = Number.parseFloat(transitionDuration);\n  var floatTransitionDelay = Number.parseFloat(transitionDelay);\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0;\n  }\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0];\n  transitionDelay = transitionDelay.split(',')[0];\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1000;\n};\nexport { getTransitionDurationFromElement as default };","map":{"version":3,"names":["getTransitionDurationFromElement","element","_a","window","getComputedStyle","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\utils\\getTransitionDurationFromElement.ts"],"sourcesContent":["const getTransitionDurationFromElement = (element: HTMLElement) => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1000\n}\n\nexport default getTransitionDurationFromElement\n"],"mappings":"AAAM,IAAAA,gCAAgC,GAAG,SAAAA,CAACC,OAAoB;EAC5D,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,CAAC;;;EAIN,IAAAC,EAA0C,GAAAC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC;IAAxEI,kBAAkB,GAAAH,EAAA,CAAAG,kBAAA;IAAEC,eAAe,GAAAJ,EAAA,CAAAI,eAAqC;EAE9E,IAAMC,uBAAuB,GAAGC,MAAM,CAACC,UAAU,CAACJ,kBAAkB,CAAC;EACrE,IAAMK,oBAAoB,GAAGF,MAAM,CAACC,UAAU,CAACH,eAAe,CAAC;;EAG/D,IAAI,CAACC,uBAAuB,IAAI,CAACG,oBAAoB,EAAE;IACrD,OAAO,CAAC;;;EAIVL,kBAAkB,GAAGA,kBAAkB,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrDL,eAAe,GAAGA,eAAe,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE/C,OAAO,CAACH,MAAM,CAACC,UAAU,CAACJ,kBAAkB,CAAC,GAAGG,MAAM,CAACC,UAAU,CAACH,eAAe,CAAC,IAAI,IAAI;AAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}