{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { TabsContext } from './CTabs.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport getTransitionDurationFromElement from '../../utils/getTransitionDurationFromElement.js';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\nvar CTabPanel = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    itemKey = _a.itemKey,\n    onHide = _a.onHide,\n    onShow = _a.onShow,\n    _b = _a.transition,\n    transition = _b === void 0 ? true : _b,\n    visible = _a.visible,\n    rest = __rest(_a, [\"children\", \"className\", \"itemKey\", \"onHide\", \"onShow\", \"transition\", \"visible\"]);\n  var _c = useContext(TabsContext),\n    _activeItemKey = _c._activeItemKey,\n    id = _c.id;\n  var tabPaneRef = useRef();\n  var forkedRef = useForkedRef(ref, tabPaneRef);\n  var _d = useState(visible || _activeItemKey === itemKey),\n    _visible = _d[0],\n    setVisible = _d[1];\n  useEffect(function () {\n    visible !== undefined && setVisible(visible);\n  }, [visible]);\n  useEffect(function () {\n    setVisible(_activeItemKey === itemKey);\n  }, [_activeItemKey]);\n  return React.createElement(Transition, {\n    in: _visible,\n    nodeRef: tabPaneRef,\n    onEnter: onShow,\n    onExit: onHide,\n    timeout: tabPaneRef.current ? getTransitionDurationFromElement(tabPaneRef.current) : 0\n  }, function (state) {\n    return React.createElement(\"div\", __assign({\n      className: classNames('tab-pane', {\n        active: _visible,\n        fade: transition,\n        show: state === 'entered'\n      }, className),\n      id: \"\".concat(id).concat(itemKey, \"-tab-pane\"),\n      role: \"tabpanel\",\n      \"aria-labelledby\": \"\".concat(id).concat(itemKey, \"-tab\"),\n      tabIndex: 0,\n      ref: forkedRef\n    }, rest), children);\n  });\n});\nCTabPanel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  transition: PropTypes.bool,\n  visible: PropTypes.bool\n};\nCTabPanel.displayName = 'CTabPanel';\nexport { CTabPanel };","map":{"version":3,"names":["CTabPanel","forwardRef","_a","ref","children","className","itemKey","onHide","onShow","_b","transition","visible","rest","__rest","_c","useContext","TabsContext","_activeItemKey","id","tabPaneRef","useRef","forkedRef","useForkedRef","_d","useState","_visible","setVisible","useEffect","undefined","React","createElement","Transition","in","nodeRef","onEnter","onExit","timeout","current","getTransitionDurationFromElement","state","__assign","classNames","active","fade","show","concat","role","tabIndex","propTypes","PropTypes","node","string","oneOfType","number","isRequired","func","bool","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/tabs/CTabPanel.tsx"],"sourcesContent":["import React, { HTMLAttributes, forwardRef, useContext, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { TabsContext } from './CTabs'\nimport { useForkedRef } from '../../hooks'\nimport { getTransitionDurationFromElement } from '../../utils'\n\nexport interface CTabPanelProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n  /**\n   * Callback fired when the component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * Enable fade in and fade out transition.\n   */\n  transition?: boolean\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\nexport const CTabPanel = forwardRef<HTMLDivElement, CTabPanelProps>(\n  ({ children, className, itemKey, onHide, onShow, transition = true, visible, ...rest }, ref) => {\n    const { _activeItemKey, id } = useContext(TabsContext)\n\n    const tabPaneRef = useRef()\n    const forkedRef = useForkedRef(ref, tabPaneRef)\n\n    const [_visible, setVisible] = useState(visible || _activeItemKey === itemKey)\n\n    useEffect(() => {\n      visible !== undefined && setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      setVisible(_activeItemKey === itemKey)\n    }, [_activeItemKey])\n\n    return (\n      <Transition\n        in={_visible}\n        nodeRef={tabPaneRef}\n        onEnter={onShow}\n        onExit={onHide}\n        timeout={tabPaneRef.current ? getTransitionDurationFromElement(tabPaneRef.current) : 0}\n      >\n        {(state) => (\n          <div\n            className={classNames(\n              'tab-pane',\n              {\n                active: _visible,\n                fade: transition,\n                show: state === 'entered',\n              },\n              className,\n            )}\n            id={`${id}${itemKey}-tab-pane`}\n            role=\"tabpanel\"\n            aria-labelledby={`${id}${itemKey}-tab`}\n            tabIndex={0}\n            ref={forkedRef}\n            {...rest}\n          >\n            {children}\n          </div>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCTabPanel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  transition: PropTypes.bool,\n  visible: PropTypes.bool,\n}\n\nCTabPanel.displayName = 'CTabPanel'\n"],"mappings":";;;;;;;;;IAoCaA,SAAS,GAAGC,UAAU,CACjC,UAACC,EAAqF,EAAEC,GAAG;EAAxF,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IAAEC,MAAM,GAAAL,EAAA,CAAAK,MAAA;IAAEC,MAAM,GAAAN,EAAA,CAAAM,MAAA;IAAEC,EAAA,GAAAP,EAAA,CAAAQ,UAAiB;IAAjBA,UAAU,GAAGD,EAAA,kBAAI,GAAAA,EAAA;IAAEE,OAAO,GAAAT,EAAA,CAAAS,OAAA;IAAKC,IAAI,GAAnFC,MAAA,CAAAX,EAAA,mFAAqF,CAAF;EAC5E,IAAAY,EAAA,GAAyBC,UAAU,CAACC,WAAW,CAAC;IAA9CC,cAAc,GAAAH,EAAA,CAAAG,cAAA;IAAEC,EAAE,GAAAJ,EAAA,CAAAI,EAA4B;EAEtD,IAAMC,UAAU,GAAGC,MAAM,EAAE;EAC3B,IAAMC,SAAS,GAAGC,YAAY,CAACnB,GAAG,EAAEgB,UAAU,CAAC;EAEzC,IAAAI,EAAyB,GAAAC,QAAQ,CAACb,OAAO,IAAIM,cAAc,KAAKX,OAAO,CAAC;IAAvEmB,QAAQ,GAAAF,EAAA;IAAEG,UAAU,GAAAH,EAAA,GAAmD;EAE9EI,SAAS,CAAC;IACRhB,OAAO,KAAKiB,SAAS,IAAIF,UAAU,CAACf,OAAO,CAAC;EAC9C,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbgB,SAAS,CAAC;IACRD,UAAU,CAACT,cAAc,KAAKX,OAAO,CAAC;EACxC,CAAC,EAAE,CAACW,cAAc,CAAC,CAAC;EAEpB,OACEY,KAAA,CAAAC,aAAA,CAACC,UAAU;IACTC,EAAE,EAAEP,QAAQ;IACZQ,OAAO,EAAEd,UAAU;IACnBe,OAAO,EAAE1B,MAAM;IACf2B,MAAM,EAAE5B,MAAM;IACd6B,OAAO,EAAEjB,UAAU,CAACkB,OAAO,GAAGC,gCAAgC,CAACnB,UAAU,CAACkB,OAAO,CAAC,GAAG;EAAC,GAErF,UAACE,KAAK,EAAK;IAAA,OACVV,KAAA,CAAAC,aAAA,QAAAU,QAAA;MACEnC,SAAS,EAAEoC,UAAU,CACnB,UAAU,EACV;QACEC,MAAM,EAAEjB,QAAQ;QAChBkB,IAAI,EAAEjC,UAAU;QAChBkC,IAAI,EAAEL,KAAK,KAAK;MACjB,GACDlC,SAAS,CACV;MACDa,EAAE,EAAE,GAAA2B,MAAA,CAAG3B,EAAE,EAAA2B,MAAA,CAAGvC,OAAO,cAAW;MAC9BwC,IAAI,EAAC,UAAU;MACE,sBAAAD,MAAA,CAAG3B,EAAE,CAAG,CAAA2B,MAAA,CAAAvC,OAAO,EAAM;MACtCyC,QAAQ,EAAE,CAAC;MACX5C,GAAG,EAAEkB;IAAS,GACVT,IAAI,GAEPR,QAAQ,CACL;EAAA,CACP,CACU;AAEjB,CAAC;AAGHJ,SAAS,CAACgD,SAAS,GAAG;EACpB5C,QAAQ,EAAE6C,SAAS,CAACC,IAAI;EACxB7C,SAAS,EAAE4C,SAAS,CAACE,MAAM;EAC3B7C,OAAO,EAAE2C,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACE,MAAM,CAAC,CAAC,CAACG,UAAU;EAC7E/C,MAAM,EAAE0C,SAAS,CAACM,IAAI;EACtB/C,MAAM,EAAEyC,SAAS,CAACM,IAAI;EACtB7C,UAAU,EAAEuC,SAAS,CAACO,IAAI;EAC1B7C,OAAO,EAAEsC,SAAS,CAACO;CACpB;AAEDxD,SAAS,CAACyD,WAAW,GAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}