{"ast":null,"code":"import { __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CFormControlValidation } from './CFormControlValidation.js';\nimport { CFormFloating } from './CFormFloating.js';\nimport { CFormLabel } from './CFormLabel.js';\nimport { CFormText } from './CFormText.js';\nvar CFormControlWrapper = function (_a) {\n  var children = _a.children,\n    describedby = _a.describedby,\n    feedback = _a.feedback,\n    feedbackInvalid = _a.feedbackInvalid,\n    feedbackValid = _a.feedbackValid,\n    floatingClassName = _a.floatingClassName,\n    floatingLabel = _a.floatingLabel,\n    id = _a.id,\n    invalid = _a.invalid,\n    label = _a.label,\n    text = _a.text,\n    tooltipFeedback = _a.tooltipFeedback,\n    valid = _a.valid;\n  var FormControlValidation = function () {\n    return React.createElement(CFormControlValidation, {\n      describedby: describedby,\n      feedback: feedback,\n      feedbackInvalid: feedbackInvalid,\n      feedbackValid: feedbackValid,\n      floatingLabel: floatingLabel,\n      invalid: invalid,\n      tooltipFeedback: tooltipFeedback,\n      valid: valid\n    });\n  };\n  return floatingLabel ? React.createElement(CFormFloating, {\n    className: floatingClassName\n  }, children, React.createElement(CFormLabel, {\n    htmlFor: id\n  }, label || floatingLabel), text && React.createElement(CFormText, {\n    id: describedby\n  }, text), React.createElement(FormControlValidation, null)) : React.createElement(React.Fragment, null, label && React.createElement(CFormLabel, {\n    htmlFor: id\n  }, label), children, text && React.createElement(CFormText, {\n    id: describedby\n  }, text), React.createElement(FormControlValidation, null));\n};\nCFormControlWrapper.propTypes = __assign({\n  children: PropTypes.node,\n  floatingClassName: PropTypes.string,\n  floatingLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  text: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n}, CFormControlValidation.propTypes);\nCFormControlWrapper.displayName = 'CFormControlWrapper';\nexport { CFormControlWrapper };","map":{"version":3,"names":["CFormControlWrapper","_a","children","describedby","feedback","feedbackInvalid","feedbackValid","floatingClassName","floatingLabel","id","invalid","label","text","tooltipFeedback","valid","FormControlValidation","React","createElement","CFormControlValidation","CFormFloating","className","CFormLabel","htmlFor","CFormText","Fragment","propTypes","__assign","PropTypes","node","string","oneOfType","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/form/CFormControlWrapper.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CFormControlValidation, CFormControlValidationProps } from './CFormControlValidation'\nimport { CFormFloating } from './CFormFloating'\nimport { CFormLabel } from './CFormLabel'\nimport { CFormText } from './CFormText'\n\nexport interface CFormControlWrapperProps extends CFormControlValidationProps {\n  /**\n   * @ignore\n   */\n  children?: ReactNode\n  /**\n   * A string of all className you want applied to the floating label wrapper.\n   *\n   * @since 4.5.0\n   */\n  floatingClassName?: string\n  /**\n   * Provide valuable, actionable valid feedback when using standard HTML form validation which applied two CSS pseudo-classes, `:invalid` and `:valid`.\n   *\n   * @since 4.2.0\n   */\n  floatingLabel?: ReactNode | string\n  /**\n   * @ignore\n   */\n  id?: string\n  /**\n   * Add a caption for a component.\n   *\n   * @since 4.2.0\n   */\n  label?: ReactNode | string\n  /**\n   * Add helper text to the component.\n   *\n   * @since 4.2.0\n   */\n  text?: ReactNode | string\n}\n\nexport const CFormControlWrapper: FC<CFormControlWrapperProps> = ({\n  children,\n  describedby,\n  feedback,\n  feedbackInvalid,\n  feedbackValid,\n  floatingClassName,\n  floatingLabel,\n  id,\n  invalid,\n  label,\n  text,\n  tooltipFeedback,\n  valid,\n}) => {\n  const FormControlValidation = () => (\n    <CFormControlValidation\n      describedby={describedby}\n      feedback={feedback}\n      feedbackInvalid={feedbackInvalid}\n      feedbackValid={feedbackValid}\n      floatingLabel={floatingLabel}\n      invalid={invalid}\n      tooltipFeedback={tooltipFeedback}\n      valid={valid}\n    />\n  )\n  return floatingLabel ? (\n    <CFormFloating className={floatingClassName}>\n      {children}\n      <CFormLabel htmlFor={id}>{label || floatingLabel}</CFormLabel>\n      {text && <CFormText id={describedby}>{text}</CFormText>}\n      <FormControlValidation />\n    </CFormFloating>\n  ) : (\n    <>\n      {label && <CFormLabel htmlFor={id}>{label}</CFormLabel>}\n      {children}\n      {text && <CFormText id={describedby}>{text}</CFormText>}\n      <FormControlValidation />\n    </>\n  )\n}\n\nCFormControlWrapper.propTypes = {\n  children: PropTypes.node,\n  floatingClassName: PropTypes.string,\n  floatingLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  text: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  ...CFormControlValidation.propTypes,\n}\n\nCFormControlWrapper.displayName = 'CFormControlWrapper'\n"],"mappings":";;;;;;;AA2CO,IAAMA,mBAAmB,GAAiC,SAAAA,CAACC,EAcjE;EAbC,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,WAAW,GAAAF,EAAA,CAAAE,WAAA;IACXC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IACRC,eAAe,GAAAJ,EAAA,CAAAI,eAAA;IACfC,aAAa,GAAAL,EAAA,CAAAK,aAAA;IACbC,iBAAiB,GAAAN,EAAA,CAAAM,iBAAA;IACjBC,aAAa,GAAAP,EAAA,CAAAO,aAAA;IACbC,EAAE,GAAAR,EAAA,CAAAQ,EAAA;IACFC,OAAO,GAAAT,EAAA,CAAAS,OAAA;IACPC,KAAK,GAAAV,EAAA,CAAAU,KAAA;IACLC,IAAI,GAAAX,EAAA,CAAAW,IAAA;IACJC,eAAe,GAAAZ,EAAA,CAAAY,eAAA;IACfC,KAAK,GAAAb,EAAA,CAAAa,KAAA;EAEL,IAAMC,qBAAqB,GAAG,SAAAA,CAAA;IAAM,OAClCC,KAAA,CAAAC,aAAA,CAACC,sBAAsB,EACrB;MAAAf,WAAW,EAAEA,WAAW;MACxBC,QAAQ,EAAEA,QAAQ;MAClBC,eAAe,EAAEA,eAAe;MAChCC,aAAa,EAAEA,aAAa;MAC5BE,aAAa,EAAEA,aAAa;MAC5BE,OAAO,EAAEA,OAAO;MAChBG,eAAe,EAAEA,eAAe;MAChCC,KAAK,EAAEA;IAAK,EACZ;EACH;EACD,OAAON,aAAa,GAClBQ,KAAA,CAAAC,aAAA,CAACE,aAAa;IAACC,SAAS,EAAEb;EAAiB,GACxCL,QAAQ,EACTc,KAAC,CAAAC,aAAA,CAAAI,UAAU;IAACC,OAAO,EAAEb;EAAE,CAAG,EAAAE,KAAK,IAAIH,aAAa,CAAc,EAC7DI,IAAI,IAAII,KAAA,CAAAC,aAAA,CAACM,SAAS;IAACd,EAAE,EAAEN;EAAW,CAAG,EAAAS,IAAI,CAAa,EACvDI,KAAA,CAAAC,aAAA,CAACF,qBAAqB,EAAG,MACX,GAEhBC,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAQ,QAAA,QACGb,KAAK,IAAIK,KAAA,CAAAC,aAAA,CAACI,UAAU;IAACC,OAAO,EAAEb;EAAE,CAAG,EAAAE,KAAK,CAAc,EACtDT,QAAQ,EACRU,IAAI,IAAII,KAAA,CAAAC,aAAA,CAACM,SAAS;IAACd,EAAE,EAAEN;EAAW,CAAG,EAAAS,IAAI,CAAa,EACvDI,KAAA,CAAAC,aAAA,CAACF,qBAAqB,OAAG,CAE5B;AACH;AAEAf,mBAAmB,CAACyB,SAAS,GAC3BC,QAAA;EAAAxB,QAAQ,EAAEyB,SAAS,CAACC,IAAI;EACxBrB,iBAAiB,EAAEoB,SAAS,CAACE,MAAM;EACnCrB,aAAa,EAAEmB,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACC,IAAI,EAAED,SAAS,CAACE,MAAM,CAAC,CAAC;EACtElB,KAAK,EAAEgB,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACC,IAAI,EAAED,SAAS,CAACE,MAAM,CAAC,CAAC;EAC9DjB,IAAI,EAAEe,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACC,IAAI,EAAED,SAAS,CAACE,MAAM,CAAC;AAAC,CAC1D,EAAAX,sBAAsB,CAACO,SAAS,CACpC;AAEDzB,mBAAmB,CAAC+B,WAAW,GAAG,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}