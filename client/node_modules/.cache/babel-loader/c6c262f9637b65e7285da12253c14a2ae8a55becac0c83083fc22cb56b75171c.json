{"ast":null,"code":"import getTransitionDurationFromElement from './getTransitionDurationFromElement.js';\nvar execute = function (callback) {\n  if (typeof callback === 'function') {\n    callback();\n  }\n};\nvar triggerTransitionEnd = function (element) {\n  element.dispatchEvent(new Event('transitionend'));\n};\nvar executeAfterTransition = function (callback, transitionElement, waitForTransition) {\n  if (waitForTransition === void 0) {\n    waitForTransition = true;\n  }\n  if (!waitForTransition) {\n    execute(callback);\n    return;\n  }\n  var durationPadding = 5;\n  var emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n  var called = false;\n  var handler = function (_a) {\n    var target = _a.target;\n    if (target !== transitionElement) {\n      return;\n    }\n    called = true;\n    transitionElement.removeEventListener('transitionend', handler);\n    execute(callback);\n  };\n  transitionElement.addEventListener('transitionend', handler);\n  setTimeout(function () {\n    if (!called) {\n      triggerTransitionEnd(transitionElement);\n    }\n  }, emulatedDuration);\n};\nexport { executeAfterTransition as default };","map":{"version":3,"names":["execute","callback","triggerTransitionEnd","element","dispatchEvent","Event","executeAfterTransition","transitionElement","waitForTransition","durationPadding","emulatedDuration","getTransitionDurationFromElement","called","handler","_a","target","removeEventListener","addEventListener","setTimeout"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\utils\\executeAfterTransition.ts"],"sourcesContent":["import getTransitionDurationFromElement from './getTransitionDurationFromElement'\n\nconst execute = (callback: () => void) => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst triggerTransitionEnd = (element: HTMLElement) => {\n  element.dispatchEvent(new Event('transitionend'))\n}\n\nconst executeAfterTransition = (\n  callback: () => void,\n  transitionElement: HTMLElement,\n  waitForTransition = true,\n) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }: { target: any }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener('transitionend', handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener('transitionend', handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\nexport default executeAfterTransition\n"],"mappings":";AAEA,IAAMA,OAAO,GAAG,SAAAA,CAACC,QAAoB;EACnC,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAClCA,QAAQ,EAAE;;AAEd,CAAC;AAED,IAAMC,oBAAoB,GAAG,SAAAA,CAACC,OAAoB;EAChDA,OAAO,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,eAAe,CAAC,CAAC;AACnD,CAAC;AAED,IAAMC,sBAAsB,GAAG,SAAAA,CAC7BL,QAAoB,EACpBM,iBAA8B,EAC9BC,iBAAwB;EAAxB,IAAAA,iBAAA;IAAAA,iBAAwB;EAAA;EAExB,IAAI,CAACA,iBAAiB,EAAE;IACtBR,OAAO,CAACC,QAAQ,CAAC;IACjB;;EAGF,IAAMQ,eAAe,GAAG,CAAC;EACzB,IAAMC,gBAAgB,GAAGC,gCAAgC,CAACJ,iBAAiB,CAAC,GAAGE,eAAe;EAE9F,IAAIG,MAAM,GAAG,KAAK;EAElB,IAAMC,OAAO,GAAG,SAAAA,CAACC,EAA2B;IAAzB,IAAAC,MAAM,GAAAD,EAAA,CAAAC,MAAA;IACvB,IAAIA,MAAM,KAAKR,iBAAiB,EAAE;MAChC;;IAGFK,MAAM,GAAG,IAAI;IACbL,iBAAiB,CAACS,mBAAmB,CAAC,eAAe,EAAEH,OAAO,CAAC;IAC/Db,OAAO,CAACC,QAAQ,CAAC;EACnB,CAAC;EAEDM,iBAAiB,CAACU,gBAAgB,CAAC,eAAe,EAAEJ,OAAO,CAAC;EAC5DK,UAAU,CAAC;IACT,IAAI,CAACN,MAAM,EAAE;MACXV,oBAAoB,CAACK,iBAAiB,CAAC;;GAE1C,EAAEG,gBAAgB,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}