{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { colorPropType, shapePropType, textColorsPropType } from '../../props.js';\nvar CAvatar = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    color = _a.color,\n    shape = _a.shape,\n    size = _a.size,\n    src = _a.src,\n    status = _a.status,\n    textColor = _a.textColor,\n    rest = __rest(_a, [\"children\", \"className\", \"color\", \"shape\", \"size\", \"src\", \"status\", \"textColor\"]);\n  var statusClassName = status && classNames('avatar-status', \"bg-\".concat(status));\n  return React.createElement(\"div\", __assign({\n    className: classNames('avatar', (_b = {}, _b[\"bg-\".concat(color)] = color, _b[\"avatar-\".concat(size)] = size, _b[\"text-\".concat(textColor)] = textColor, _b), shape, className)\n  }, rest, {\n    ref: ref\n  }), src ? React.createElement(\"img\", {\n    src: src,\n    className: \"avatar-img\"\n  }) : children, status && React.createElement(\"span\", {\n    className: statusClassName\n  }));\n});\nCAvatar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  shape: shapePropType,\n  size: PropTypes.string,\n  src: PropTypes.string,\n  status: PropTypes.string,\n  textColor: textColorsPropType\n};\nCAvatar.displayName = 'CAvatar';\nexport { CAvatar };","map":{"version":3,"names":["CAvatar","forwardRef","_a","ref","children","className","color","shape","size","src","status","textColor","rest","__rest","statusClassName","classNames","concat","React","createElement","__assign","_b","propTypes","PropTypes","node","string","colorPropType","shapePropType","textColorsPropType","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\avatar\\CAvatar.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType, shapePropType, textColorsPropType } from '../../props'\nimport type { Colors, Shapes, TextColors } from '../../types'\n\nexport interface CAvatarProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Select the shape of the component.\n   *\n   * @type 'rounded' | 'rounded-top' | 'rounded-end' | 'rounded-bottom' | 'rounded-start' | 'rounded-circle' | 'rounded-pill' | 'rounded-0' | 'rounded-1' | 'rounded-2' | 'rounded-3' | string\n   */\n  shape?: Shapes\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: string\n  /**\n   * The src attribute for the img element.\n   */\n  src?: string\n  /**\n   * Sets the color context of the status indicator to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  status?: Colors\n  /**\n   * Sets the text color of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'primary-emphasis' | 'secondary-emphasis' | 'success-emphasis' | 'danger-emphasis' | 'warning-emphasis' | 'info-emphasis' | 'light-emphasis' | 'body' | 'body-emphasis' | 'body-secondary' | 'body-tertiary' | 'black' | 'black-50' | 'white' | 'white-50' | string\n   */\n  textColor?: TextColors\n}\n\nexport const CAvatar = forwardRef<HTMLDivElement, CAvatarProps>(\n  ({ children, className, color, shape, size, src, status, textColor, ...rest }, ref) => {\n    const statusClassName = status && classNames('avatar-status', `bg-${status}`)\n\n    return (\n      <div\n        className={classNames(\n          'avatar',\n          {\n            [`bg-${color}`]: color,\n            [`avatar-${size}`]: size,\n            [`text-${textColor}`]: textColor,\n          },\n          shape,\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {src ? <img src={src} className=\"avatar-img\" /> : children}\n        {status && <span className={statusClassName}></span>}\n      </div>\n    )\n  },\n)\n\nCAvatar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  shape: shapePropType,\n  size: PropTypes.string,\n  src: PropTypes.string,\n  status: PropTypes.string,\n  textColor: textColorsPropType,\n}\n\nCAvatar.displayName = 'CAvatar'\n"],"mappings":";;;;;IA8CaA,OAAO,GAAGC,UAAU,CAC/B,UAACC,EAA4E,EAAEC,GAAG;;EAA/E,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAEC,KAAK,GAAAL,EAAA,CAAAK,KAAA;IAAEC,IAAI,GAAAN,EAAA,CAAAM,IAAA;IAAEC,GAAG,GAAAP,EAAA,CAAAO,GAAA;IAAEC,MAAM,GAAAR,EAAA,CAAAQ,MAAA;IAAEC,SAAS,GAAAT,EAAA,CAAAS,SAAA;IAAKC,IAAI,GAA1EC,MAAA,CAAAX,EAAA,mFAA4E,CAAF;EACzE,IAAMY,eAAe,GAAGJ,MAAM,IAAIK,UAAU,CAAC,eAAe,EAAE,KAAM,CAAAC,MAAA,CAAAN,MAAM,CAAE,CAAC;EAE7E,OACEO,KACE,CAAAC,aAAA,QAAAC,QAAA;IAAAd,SAAS,EAAEU,UAAU,CACnB,QAAQ,GAAAK,EAAA,OAENA,EAAA,CAAC,KAAM,CAAAJ,MAAA,CAAAV,KAAK,CAAE,IAAGA,KAAK,EACtBc,EAAA,CAAC,SAAU,CAAAJ,MAAA,CAAAR,IAAI,CAAE,IAAGA,IAAI,EACxBY,EAAA,CAAC,OAAQ,CAAAJ,MAAA,CAAAL,SAAS,CAAE,IAAGA,SAAS,E,KAElCJ,KAAK,EACLF,SAAS;EACV,GACGO,IAAI,EACR;IAAAT,GAAG,EAAEA;EAAG,IAEPM,GAAG,GAAGQ,KAAA,CAAAC,aAAA;IAAKT,GAAG,EAAEA,GAAG;IAAEJ,SAAS,EAAC;EAAY,EAAG,GAAGD,QAAQ,EACzDM,MAAM,IAAIO,KAAA,CAAAC,aAAA;IAAMb,SAAS,EAAES;EAAe,CAAS,EAChD;AAEV,CAAC;AAGHd,OAAO,CAACqB,SAAS,GAAG;EAClBjB,QAAQ,EAAEkB,SAAS,CAACC,IAAI;EACxBlB,SAAS,EAAEiB,SAAS,CAACE,MAAM;EAC3BlB,KAAK,EAAEmB,aAAa;EACpBlB,KAAK,EAAEmB,aAAa;EACpBlB,IAAI,EAAEc,SAAS,CAACE,MAAM;EACtBf,GAAG,EAAEa,SAAS,CAACE,MAAM;EACrBd,MAAM,EAAEY,SAAS,CAACE,MAAM;EACxBb,SAAS,EAAEgB;CACZ;AAED3B,OAAO,CAAC4B,WAAW,GAAG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}