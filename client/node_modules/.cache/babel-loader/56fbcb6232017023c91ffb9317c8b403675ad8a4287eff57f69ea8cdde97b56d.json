{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CProgressStackedContext } from './CProgressStacked.js';\nimport { colorPropType } from '../../props.js';\nvar CProgressBar = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    animated = _a.animated,\n    className = _a.className,\n    color = _a.color,\n    _c = _a.value,\n    value = _c === void 0 ? 0 : _c,\n    variant = _a.variant,\n    rest = __rest(_a, [\"children\", \"animated\", \"className\", \"color\", \"value\", \"variant\"]);\n  var stacked = useContext(CProgressStackedContext).stacked;\n  return React.createElement(\"div\", __assign({\n    className: classNames('progress-bar', (_b = {}, _b[\"bg-\".concat(color)] = color, _b[\"progress-bar-\".concat(variant)] = variant, _b['progress-bar-animated'] = animated, _b), className)\n  }, !stacked && {\n    style: {\n      width: \"\".concat(value, \"%\")\n    }\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCProgressBar.propTypes = {\n  animated: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  value: PropTypes.number,\n  variant: PropTypes.oneOf(['striped'])\n};\nCProgressBar.displayName = 'CProgressBar';\nexport { CProgressBar };","map":{"version":3,"names":["CProgressBar","forwardRef","_a","ref","children","animated","className","color","_c","value","variant","rest","__rest","stacked","useContext","CProgressStackedContext","React","createElement","__assign","classNames","_b","concat","style","width","propTypes","PropTypes","bool","node","string","colorPropType","number","oneOf","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\progress\\CProgressBar.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CProgressStackedContext } from './CProgressStacked'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CProgressBarProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Use to animate the stripes right to left via CSS3 animations.\n   */\n  animated?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * The percent to progress the ProgressBar.\n   */\n  value?: number\n  /**\n   * Set the progress bar variant to optional striped.\n   */\n  variant?: 'striped'\n}\n\nexport const CProgressBar = forwardRef<HTMLDivElement, CProgressBarProps>(\n  ({ children, animated, className, color, value = 0, variant, ...rest }, ref) => {\n    const { stacked } = useContext(CProgressStackedContext)\n\n    return (\n      <div\n        className={classNames(\n          'progress-bar',\n          {\n            [`bg-${color}`]: color,\n            [`progress-bar-${variant}`]: variant,\n            'progress-bar-animated': animated,\n          },\n          className,\n        )}\n        {...(!stacked && { style: { width: `${value}%` } })}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\nCProgressBar.propTypes = {\n  animated: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  value: PropTypes.number,\n  variant: PropTypes.oneOf(['striped']),\n}\n\nCProgressBar.displayName = 'CProgressBar'\n"],"mappings":";;;;;;IAiCaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAAqE,EAAEC,GAAG;;EAAxE,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,KAAK,GAAAL,EAAA,CAAAK,KAAA;IAAEC,EAAA,GAAAN,EAAA,CAAAO,KAAS;IAATA,KAAK,GAAGD,EAAA,eAAC,GAAAA,EAAA;IAAEE,OAAO,GAAAR,EAAA,CAAAQ,OAAA;IAAKC,IAAI,GAAnEC,MAAA,CAAAV,EAAA,oEAAqE,CAAF;EAC1D,IAAAW,OAAO,GAAKC,UAAU,CAACC,uBAAuB,CAAC,CAAAF,OAAxC;EAEf,OACEG,KACE,CAAAC,aAAA,QAAAC,QAAA;IAAAZ,SAAS,EAAEa,UAAU,CACnB,cAAc,GAAAC,EAAA,OAEZA,EAAA,CAAC,KAAM,CAAAC,MAAA,CAAAd,KAAK,CAAE,IAAGA,KAAK,EACtBa,EAAA,CAAC,eAAgB,CAAAC,MAAA,CAAAX,OAAO,CAAE,IAAGA,OAAO,EACpCU,EAAA,yBAAuB,GAAEf,QAAQ,EAEnCe,EAAA,GAAAd,SAAS;EACV,GACI,CAACO,OAAO,IAAI;IAAES,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAG,CAAAF,MAAA,CAAAZ,KAAK,EAAG;IAAA;EAAE,CAAE,EAC9CE,IAAI,EACR;IAAAR,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACL;AAEV,CAAC;AAEHJ,YAAY,CAACwB,SAAS,GAAG;EACvBnB,QAAQ,EAAEoB,SAAS,CAACC,IAAI;EACxBtB,QAAQ,EAAEqB,SAAS,CAACE,IAAI;EACxBrB,SAAS,EAAEmB,SAAS,CAACG,MAAM;EAC3BrB,KAAK,EAAEsB,aAAa;EACpBpB,KAAK,EAAEgB,SAAS,CAACK,MAAM;EACvBpB,OAAO,EAAEe,SAAS,CAACM,KAAK,CAAC,CAAC,SAAS,CAAC;CACrC;AAED/B,YAAY,CAACgC,WAAW,GAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}