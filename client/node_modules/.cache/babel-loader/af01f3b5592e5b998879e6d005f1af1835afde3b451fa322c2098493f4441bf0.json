{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CDropdownDivider = forwardRef(function (_a, ref) {\n  var className = _a.className,\n    rest = __rest(_a, [\"className\"]);\n  return React.createElement(\"hr\", __assign({\n    className: classNames('dropdown-divider', className)\n  }, rest, {\n    ref: ref\n  }));\n});\nCDropdownDivider.propTypes = {\n  className: PropTypes.string\n};\nCDropdownDivider.displayName = 'CDropdownDivider';\nexport { CDropdownDivider };","map":{"version":3,"names":["CDropdownDivider","forwardRef","_a","ref","className","rest","__rest","React","createElement","__assign","classNames","propTypes","PropTypes","string","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\Video-Call-App\\client\\node_modules\\@coreui\\react\\src\\components\\dropdown\\CDropdownDivider.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CDropdownDividerProps extends HTMLAttributes<HTMLHRElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CDropdownDivider = forwardRef<HTMLHRElement, CDropdownDividerProps>(\n  ({ className, ...rest }, ref) => {\n    return <hr className={classNames('dropdown-divider', className)} {...rest} ref={ref} />\n  },\n)\n\nCDropdownDivider.propTypes = {\n  className: PropTypes.string,\n}\n\nCDropdownDivider.displayName = 'CDropdownDivider'\n"],"mappings":";;;;IAWaA,gBAAgB,GAAGC,UAAU,CACxC,UAACC,EAAsB,EAAEC,GAAG;EAAzB,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAJ,EAAA,EAApB,aAAsB,CAAF;EACnB,OAAOK,KAAA,CAAAC,aAAA,OAAAC,QAAA;IAAIL,SAAS,EAAEM,UAAU,CAAC,kBAAkB,EAAEN,SAAS;EAAC,GAAMC,IAAI,EAAE;IAAAF,GAAG,EAAEA;EAAG,GAAI;AACzF,CAAC;AAGHH,gBAAgB,CAACW,SAAS,GAAG;EAC3BP,SAAS,EAAEQ,SAAS,CAACC;CACtB;AAEDb,gBAAgB,CAACc,WAAW,GAAG,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}