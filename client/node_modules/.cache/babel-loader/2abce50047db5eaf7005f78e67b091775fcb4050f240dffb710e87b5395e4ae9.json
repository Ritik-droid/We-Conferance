{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\nvar CBackdrop = forwardRef(function (_a, ref) {\n  var _b = _a.className,\n    className = _b === void 0 ? 'modal-backdrop' : _b,\n    visible = _a.visible,\n    rest = __rest(_a, [\"className\", \"visible\"]);\n  var backdropRef = useRef(null);\n  var forkedRef = useForkedRef(ref, backdropRef);\n  return React.createElement(Transition, {\n    in: visible,\n    mountOnEnter: true,\n    nodeRef: backdropRef,\n    timeout: 150,\n    unmountOnExit: true\n  }, function (state) {\n    return React.createElement(\"div\", __assign({\n      className: classNames(className, 'fade', {\n        show: state === 'entered'\n      })\n    }, rest, {\n      ref: forkedRef\n    }));\n  });\n});\nCBackdrop.propTypes = {\n  className: PropTypes.string,\n  visible: PropTypes.bool\n};\nCBackdrop.displayName = 'CBackdrop';\nexport { CBackdrop };","map":{"version":3,"names":["CBackdrop","forwardRef","_a","ref","_b","className","visible","rest","__rest","backdropRef","useRef","forkedRef","useForkedRef","React","createElement","Transition","in","mountOnEnter","nodeRef","timeout","unmountOnExit","state","__assign","classNames","show","propTypes","PropTypes","string","bool","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\backdrop\\CBackdrop.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { useForkedRef } from '../../hooks'\n\nexport interface CBackdropProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Toggle the visibility of modal component.\n   */\n  visible?: boolean\n}\n\nexport const CBackdrop = forwardRef<HTMLDivElement, CBackdropProps>(\n  ({ className = 'modal-backdrop', visible, ...rest }, ref) => {\n    const backdropRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, backdropRef)\n\n    return (\n      <Transition in={visible} mountOnEnter nodeRef={backdropRef} timeout={150} unmountOnExit>\n        {(state) => (\n          <div\n            className={classNames(className, 'fade', {\n              show: state === 'entered',\n            })}\n            {...rest}\n            ref={forkedRef}\n          />\n        )}\n      </Transition>\n    )\n  },\n)\n\nCBackdrop.propTypes = {\n  className: PropTypes.string,\n  visible: PropTypes.bool,\n}\n\nCBackdrop.displayName = 'CBackdrop'\n"],"mappings":";;;;;;;IAkBaA,SAAS,GAAGC,UAAU,CACjC,UAACC,EAAkD,EAAEC,GAAG;EAArD,IAAAC,EAA4B,GAAAF,EAAA,CAAAG,SAAA;IAA5BA,SAAS,GAAAD,EAAA,cAAG,gBAAgB,GAAAA,EAAA;IAAEE,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAN,EAAA,EAAhD,wBAAkD,CAAF;EAC/C,IAAMO,WAAW,GAAGC,MAAM,CAAiB,IAAI,CAAC;EAChD,IAAMC,SAAS,GAAGC,YAAY,CAACT,GAAG,EAAEM,WAAW,CAAC;EAEhD,OACEI,KAAA,CAAAC,aAAA,CAACC,UAAU;IAACC,EAAE,EAAEV,OAAO;IAAEW,YAAY,EAAC;IAAAC,OAAO,EAAET,WAAW;IAAEU,OAAO,EAAE,GAAG;IAAEC,aAAa;EAAA,GACpF,UAACC,KAAK;IAAK,OACVR,KACE,CAAAC,aAAA,QAAAQ,QAAA;MAAAjB,SAAS,EAAEkB,UAAU,CAAClB,SAAS,EAAE,MAAM,EAAE;QACvCmB,IAAI,EAAEH,KAAK,KAAK;MACjB;IAAC,CACE,EAAAd,IAAI,EACR;MAAAJ,GAAG,EAAEQ;IAAS,CACd;EAPQ,CAQX,CACU;AAEjB,CAAC;AAGHX,SAAS,CAACyB,SAAS,GAAG;EACpBpB,SAAS,EAAEqB,SAAS,CAACC,MAAM;EAC3BrB,OAAO,EAAEoB,SAAS,CAACE;CACpB;AAED5B,SAAS,CAAC6B,WAAW,GAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}