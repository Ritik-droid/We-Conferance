{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport { colorPropType } from '../../props.js';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\nvar CToastContext = createContext({});\nvar CToast = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.animation,\n    animation = _b === void 0 ? true : _b,\n    _c = _a.autohide,\n    autohide = _c === void 0 ? true : _c,\n    className = _a.className,\n    color = _a.color,\n    _d = _a.delay,\n    delay = _d === void 0 ? 5000 : _d,\n    index = _a.index,\n    key = _a.key,\n    _e = _a.visible,\n    visible = _e === void 0 ? false : _e,\n    onClose = _a.onClose,\n    onShow = _a.onShow,\n    rest = __rest(_a, [\"children\", \"animation\", \"autohide\", \"className\", \"color\", \"delay\", \"index\", \"key\", \"visible\", \"onClose\", \"onShow\"]);\n  var toastRef = useRef();\n  var forkedRef = useForkedRef(ref, toastRef);\n  var _f = useState(false),\n    _visible = _f[0],\n    setVisible = _f[1];\n  var timeout = useRef();\n  useEffect(function () {\n    setVisible(visible);\n  }, [visible]);\n  var contextValues = {\n    visible: _visible,\n    setVisible: setVisible\n  };\n  // triggered on mount and destroy\n  useEffect(function () {\n    return function () {\n      return clearTimeout(timeout.current);\n    };\n  }, []);\n  useEffect(function () {\n    _autohide();\n  }, [_visible]);\n  var _autohide = function () {\n    if (autohide) {\n      clearTimeout(timeout.current);\n      timeout.current = window.setTimeout(function () {\n        setVisible(false);\n      }, delay);\n    }\n  };\n  return React.createElement(Transition, {\n    in: _visible,\n    nodeRef: toastRef,\n    onEnter: function () {\n      return onShow && onShow(index !== null && index !== void 0 ? index : null);\n    },\n    onExited: function () {\n      return onClose && onClose(index !== null && index !== void 0 ? index : null);\n    },\n    timeout: 250,\n    unmountOnExit: true\n  }, function (state) {\n    var _a;\n    return React.createElement(CToastContext.Provider, {\n      value: contextValues\n    }, React.createElement(\"div\", __assign({\n      className: classNames('toast', (_a = {\n        fade: animation\n      }, _a[\"bg-\".concat(color)] = color, _a['border-0'] = color, _a['show showing'] = state === 'entering' || state === 'exiting', _a.show = state === 'entered', _a), className),\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      role: \"alert\",\n      onMouseEnter: function () {\n        return clearTimeout(timeout.current);\n      },\n      onMouseLeave: function () {\n        return _autohide();\n      }\n    }, rest, {\n      key: key,\n      ref: forkedRef\n    }), children));\n  });\n});\nCToast.propTypes = {\n  animation: PropTypes.bool,\n  autohide: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  delay: PropTypes.number,\n  index: PropTypes.number,\n  key: PropTypes.number,\n  onClose: PropTypes.func,\n  onShow: PropTypes.func,\n  visible: PropTypes.bool\n};\nCToast.displayName = 'CToast';\nexport { CToast, CToastContext };","map":{"version":3,"names":["CToastContext","createContext","CToast","forwardRef","_a","ref","children","_b","animation","_c","autohide","className","color","_d","delay","index","key","_e","visible","onClose","onShow","rest","__rest","toastRef","useRef","forkedRef","useForkedRef","_f","useState","_visible","setVisible","timeout","useEffect","contextValues","clearTimeout","current","_autohide","window","setTimeout","React","createElement","Transition","in","nodeRef","onEnter","onExited","unmountOnExit","state","Provider","value","__assign","classNames","fade","concat","show","role","onMouseEnter","onMouseLeave","propTypes","PropTypes","bool","node","string","colorPropType","number","func","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\toast\\CToast.tsx"],"sourcesContent":["import React, {\n  createContext,\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { useForkedRef } from '../../hooks'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CToastProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * Apply a CSS fade transition to the toast.\n   */\n  animation?: boolean\n  /**\n   * Auto hide the toast.\n   */\n  autohide?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Delay hiding the toast (ms).\n   */\n  delay?: number\n  /**\n   * @ignore\n   */\n  index?: number\n  /**\n   * @ignore\n   */\n  key?: number\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose?: (index: number | null) => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: (index: number | null) => void\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\ninterface ContextProps extends CToastProps {\n  visible?: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean | undefined>>\n}\n\nexport const CToastContext = createContext({} as ContextProps)\n\nexport const CToast = forwardRef<HTMLDivElement, CToastProps>(\n  (\n    {\n      children,\n      animation = true,\n      autohide = true,\n      className,\n      color,\n      delay = 5000,\n      index,\n      key,\n      visible = false,\n      onClose,\n      onShow,\n      ...rest\n    },\n    ref,\n  ) => {\n    const toastRef = useRef()\n    const forkedRef = useForkedRef(ref, toastRef)\n    const [_visible, setVisible] = useState(false)\n    const timeout = useRef<number>()\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    const contextValues = {\n      visible: _visible,\n      setVisible,\n    }\n\n    // triggered on mount and destroy\n    useEffect(() => () => clearTimeout(timeout.current), [])\n\n    useEffect(() => {\n      _autohide()\n    }, [_visible])\n\n    const _autohide = () => {\n      if (autohide) {\n        clearTimeout(timeout.current)\n        timeout.current = window.setTimeout(() => {\n          setVisible(false)\n        }, delay)\n      }\n    }\n\n    return (\n      <Transition\n        in={_visible}\n        nodeRef={toastRef}\n        onEnter={() => onShow && onShow(index ?? null)}\n        onExited={() => onClose && onClose(index ?? null)}\n        timeout={250}\n        unmountOnExit\n      >\n        {(state) => (\n          <CToastContext.Provider value={contextValues}>\n            <div\n              className={classNames(\n                'toast',\n                {\n                  fade: animation,\n                  [`bg-${color}`]: color,\n                  'border-0': color,\n                  'show showing': state === 'entering' || state === 'exiting',\n                  show: state === 'entered',\n                },\n                className,\n              )}\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              role=\"alert\"\n              onMouseEnter={() => clearTimeout(timeout.current)}\n              onMouseLeave={() => _autohide()}\n              {...rest}\n              key={key}\n              ref={forkedRef}\n            >\n              {children}\n            </div>\n          </CToastContext.Provider>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCToast.propTypes = {\n  animation: PropTypes.bool,\n  autohide: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  delay: PropTypes.number,\n  index: PropTypes.number,\n  key: PropTypes.number,\n  onClose: PropTypes.func,\n  onShow: PropTypes.func,\n  visible: PropTypes.bool,\n}\n\nCToast.displayName = 'CToast'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}