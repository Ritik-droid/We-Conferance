{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nimport { colorPropType } from '../../props.js';\nvar CButton = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    _c = _a.as,\n    as = _c === void 0 ? 'button' : _c,\n    className = _a.className,\n    color = _a.color,\n    shape = _a.shape,\n    size = _a.size,\n    _d = _a.type,\n    type = _d === void 0 ? 'button' : _d,\n    variant = _a.variant,\n    rest = __rest(_a, [\"children\", \"as\", \"className\", \"color\", \"shape\", \"size\", \"type\", \"variant\"]);\n  return React.createElement(CLink, __assign({\n    as: rest.href ? 'a' : as\n  }, !rest.href && {\n    type: type\n  }, {\n    className: classNames('btn', (_b = {}, _b[\"btn-\".concat(color)] = color && !variant, _b[\"btn-\".concat(variant, \"-\").concat(color)] = color && variant, _b[\"btn-\".concat(size)] = size, _b), shape, className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCButton.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  shape: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  variant: PropTypes.oneOf(['outline', 'ghost'])\n};\nCButton.displayName = 'CButton';\nexport { CButton };","map":{"version":3,"names":["CButton","forwardRef","_a","ref","children","_c","as","className","color","shape","size","_d","type","variant","rest","__rest","React","createElement","CLink","__assign","href","classNames","_b","concat","propTypes","PropTypes","elementType","node","string","colorPropType","oneOf","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/button/CButton.tsx"],"sourcesContent":["import React, { ElementType, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink, CLinkProps } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\nimport { colorPropType } from '../../props'\nimport type { Colors, Shapes } from '../../types'\n\nexport interface CButtonProps extends Omit<CLinkProps, 'size'> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n  /**\n   * The role attribute describes the role of an element in programs that can make use of it, such as screen readers or magnifiers.\n   */\n  role?: string\n  /**\n   * Select the shape of the component.\n   *\n   * @type 'rounded' | 'rounded-top' | 'rounded-end' | 'rounded-bottom' | 'rounded-start' | 'rounded-circle' | 'rounded-pill' | 'rounded-0' | 'rounded-1' | 'rounded-2' | 'rounded-3' | string\n   */\n  shape?: Shapes\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Specifies the type of button. Always specify the type attribute for the `<button>` element.\n   * Different browsers may use different default types for the `<button>` element.\n   */\n  type?: 'button' | 'submit' | 'reset'\n  /**\n   * Set the button variant to an outlined button or a ghost button.\n   */\n  variant?: 'outline' | 'ghost'\n}\n\nexport const CButton: PolymorphicRefForwardingComponent<'button', CButtonProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CButtonProps\n>(\n  (\n    { children, as = 'button', className, color, shape, size, type = 'button', variant, ...rest },\n    ref,\n  ) => {\n    return (\n      <CLink\n        as={rest.href ? 'a' : as}\n        {...(!rest.href && { type: type })}\n        className={classNames(\n          'btn',\n          {\n            [`btn-${color}`]: color && !variant,\n            [`btn-${variant}-${color}`]: color && variant,\n            [`btn-${size}`]: size,\n          },\n          shape,\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </CLink>\n    )\n  },\n)\n\nCButton.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  shape: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  variant: PropTypes.oneOf(['outline', 'ghost']),\n}\n\nCButton.displayName = 'CButton'\n"],"mappings":";;;;;;IA8DaA,OAAO,GAA8DC,UAAU,CAI1F,UACEC,EAA6F,EAC7FC,GAAG;;EADD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAA,GAAAH,EAAA,CAAAI,EAAa;IAAbA,EAAE,GAAAD,EAAA,cAAG,QAAQ,GAAAA,EAAA;IAAEE,SAAS,GAAAL,EAAA,CAAAK,SAAA;IAAEC,KAAK,GAAAN,EAAA,CAAAM,KAAA;IAAEC,KAAK,GAAAP,EAAA,CAAAO,KAAA;IAAEC,IAAI,GAAAR,EAAA,CAAAQ,IAAA;IAAEC,EAAe,GAAAT,EAAA,CAAAU,IAAA;IAAfA,IAAI,GAAGD,EAAA,sBAAQ,GAAAA,EAAA;IAAEE,OAAO,GAAAX,EAAA,CAAAW,OAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAb,EAAA,EAA3F,4EAA6F,CAAF;EAG3F,OACEc,KAAA,CAAAC,aAAA,CAACC,KAAK,EAAAC,QAAA;IACJb,EAAE,EAAEQ,IAAI,CAACM,IAAI,GAAG,GAAG,GAAGd;EAAE,CACpB,EAAC,CAACQ,IAAI,CAACM,IAAI,IAAI;IAAER,IAAI,EAAEA;EAAI,CAAE,EACjC;IAAAL,SAAS,EAAEc,UAAU,CACnB,KAAK,GAAAC,EAAA,OAEHA,EAAA,CAAC,OAAAC,MAAA,CAAOf,KAAK,CAAE,IAAGA,KAAK,IAAI,CAACK,OAAO,EACnCS,EAAC,QAAAC,MAAA,CAAOV,OAAO,EAAI,KAAAU,MAAA,CAAAf,KAAK,CAAE,CAAG,GAAAA,KAAK,IAAIK,OAAO,EAC7CS,EAAA,CAAC,MAAO,CAAAC,MAAA,CAAAb,IAAI,CAAE,IAAGA,IAAI,EAEvBY,EAAA,GAAAb,KAAK,EACLF,SAAS;EACV,GACGO,IAAI;IACRX,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACH;AAEZ,CAAC;AAGHJ,OAAO,CAACwB,SAAS,GAAG;EAClBlB,EAAE,EAAEmB,SAAS,CAACC,WAAW;EACzBtB,QAAQ,EAAEqB,SAAS,CAACE,IAAI;EACxBpB,SAAS,EAAEkB,SAAS,CAACG,MAAM;EAC3BpB,KAAK,EAAEqB,aAAa;EACpBpB,KAAK,EAAEgB,SAAS,CAACG,MAAM;EACvBlB,IAAI,EAAEe,SAAS,CAACK,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACnClB,IAAI,EAAEa,SAAS,CAACK,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;EACpDjB,OAAO,EAAEY,SAAS,CAACK,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC;CAC9C;AAED9B,OAAO,CAAC+B,WAAW,GAAG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}