{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CButtonGroup = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    size = _a.size,\n    vertical = _a.vertical,\n    rest = __rest(_a, [\"children\", \"className\", \"size\", \"vertical\"]);\n  return React.createElement(\"div\", __assign({\n    className: classNames(vertical ? 'btn-group-vertical' : 'btn-group', (_b = {}, _b[\"btn-group-\".concat(size)] = size, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  vertical: PropTypes.bool\n};\nCButtonGroup.displayName = 'CButtonGroup';\nexport { CButtonGroup };","map":{"version":3,"names":["CButtonGroup","forwardRef","_a","ref","children","className","size","vertical","rest","__rest","React","createElement","__assign","classNames","_b","concat","propTypes","PropTypes","node","string","oneOf","bool","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/button-group/CButtonGroup.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CButtonGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Create a set of buttons that appear vertically stacked rather than horizontally. Split button dropdowns are not supported here.\n   */\n  vertical?: boolean\n}\n\nexport const CButtonGroup = forwardRef<HTMLDivElement, CButtonGroupProps>(\n  ({ children, className, size, vertical, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          vertical ? 'btn-group-vertical' : 'btn-group',\n          { [`btn-group-${size}`]: size },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  vertical: PropTypes.bool,\n}\n\nCButtonGroup.displayName = 'CButtonGroup'\n"],"mappings":";;;;IAmBaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAAgD,EAAEC,GAAG;;EAAnD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,IAAI,GAAAJ,EAAA,CAAAI,IAAA;IAAEC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAP,EAAA,EAA9C,6CAAgD,CAAF;EAC7C,OACEQ,KAAA,CAAAC,aAAA,QAAAC,QAAA;IACEP,SAAS,EAAEQ,UAAU,CACnBN,QAAQ,GAAG,oBAAoB,GAAG,WAAW,GAC3CO,EAAA,OAAAA,EAAA,CAAC,YAAa,CAAAC,MAAA,CAAAT,IAAI,CAAE,CAAG,GAAAA,IAAI,EAC7BQ,EAAA,GAAAT,SAAS;EACV,CACG,EAAAG,IAAI,EACR;IAAAL,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACL;AAEV,CAAC;AAGHJ,YAAY,CAACgB,SAAS,GAAG;EACvBZ,QAAQ,EAAEa,SAAS,CAACC,IAAI;EACxBb,SAAS,EAAEY,SAAS,CAACE,MAAM;EAC3Bb,IAAI,EAAEW,SAAS,CAACG,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACnCb,QAAQ,EAAEU,SAAS,CAACI;CACrB;AAEDrB,YAAY,CAACsB,WAAW,GAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}