{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CHeaderNav = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.as,\n    Component = _b === void 0 ? 'ul' : _b,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n  return React.createElement(Component, __assign({\n    className: classNames('header-nav', className),\n    role: \"navigation\"\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCHeaderNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCHeaderNav.displayName = 'CHeaderNav';\nexport { CHeaderNav };","map":{"version":3,"names":["CHeaderNav","forwardRef","_a","ref","children","_b","as","Component","className","rest","__rest","React","createElement","__assign","classNames","role","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/header/CHeaderNav.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CHeaderNavProps extends HTMLAttributes<HTMLDivElement | HTMLUListElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CHeaderNav: PolymorphicRefForwardingComponent<'ul', CHeaderNavProps> = forwardRef<\n  HTMLDivElement | HTMLUListElement,\n  CHeaderNavProps\n>(({ children, as: Component = 'ul', className, ...rest }, ref) => {\n  return (\n    <Component\n      className={classNames('header-nav', className)}\n      role=\"navigation\"\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCHeaderNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCHeaderNav.displayName = 'CHeaderNav'\n"],"mappings":";;;;IAiBaA,UAAU,GAA6DC,UAAU,CAG5F,UAACC,EAAsD,EAAEC,GAAG;EAAzD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAoB,GAAAH,EAAA,CAAAI,EAAA;IAAhBC,SAAS,GAAGF,EAAA,kBAAI,GAAAA,EAAA;IAAEG,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAApD,+BAAsD,CAAF;EACrD,OACES,KAAC,CAAAC,aAAA,CAAAL,SAAS,EACRM,QAAA;IAAAL,SAAS,EAAEM,UAAU,CAAC,YAAY,EAAEN,SAAS,CAAC;IAC9CO,IAAI,EAAC;EAAY,CACb,EAAAN,IAAI,EACR;IAAAN,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACC;AAEhB,CAAC;AAEDJ,UAAU,CAACgB,SAAS,GAAG;EACrBV,EAAE,EAAEW,SAAS,CAACC,WAAW;EACzBd,QAAQ,EAAEa,SAAS,CAACE,IAAI;EACxBX,SAAS,EAAES,SAAS,CAACG;CACtB;AAEDpB,UAAU,CAACqB,WAAW,GAAG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}