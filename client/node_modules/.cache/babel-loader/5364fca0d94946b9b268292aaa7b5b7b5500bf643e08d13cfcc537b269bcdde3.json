{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CInputGroupText = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.as,\n    Component = _b === void 0 ? 'span' : _b,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n  return React.createElement(Component, __assign({\n    className: classNames('input-group-text', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCInputGroupText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCInputGroupText.displayName = 'CInputGroupText';\nexport { CInputGroupText };","map":{"version":3,"names":["CInputGroupText","forwardRef","_a","ref","children","_b","as","Component","className","rest","__rest","React","createElement","__assign","classNames","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\form\\CInputGroupText.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, LabelHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CInputGroupTextProps\n  extends LabelHTMLAttributes<HTMLLabelElement | HTMLSpanElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CInputGroupText: PolymorphicRefForwardingComponent<'span', CInputGroupTextProps> =\n  forwardRef<HTMLLabelElement | HTMLSpanElement, CInputGroupTextProps>(\n    ({ children, as: Component = 'span', className, ...rest }, ref) => {\n      return (\n        <Component className={classNames('input-group-text', className)} {...rest} ref={ref}>\n          {children}\n        </Component>\n      )\n    },\n  )\n\nCInputGroupText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCInputGroupText.displayName = 'CInputGroupText'\n"],"mappings":";;;;IAkBaA,eAAe,GAC1BC,UAAU,CACR,UAACC,EAAwD,EAAEC,GAAG;EAA3D,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAsB,GAAAH,EAAA,CAAAI,EAAA;IAAlBC,SAAS,GAAGF,EAAA,oBAAM,GAAAA,EAAA;IAAEG,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAAtD,+BAAwD,CAAF;EACrD,OACES,KAAA,CAAAC,aAAA,CAACL,SAAS,EAAAM,QAAA;IAACL,SAAS,EAAEM,UAAU,CAAC,kBAAkB,EAAEN,SAAS;EAAC,CAAM,EAAAC,IAAI;IAAEN,GAAG,EAAEA;EAAG,CAChF,GAAAC,QAAQ,CACC;AAEhB,CAAC;AAGLJ,eAAe,CAACe,SAAS,GAAG;EAC1BT,EAAE,EAAEU,SAAS,CAACC,WAAW;EACzBb,QAAQ,EAAEY,SAAS,CAACE,IAAI;EACxBV,SAAS,EAAEQ,SAAS,CAACG;CACtB;AAEDnB,eAAe,CAACoB,WAAW,GAAG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}