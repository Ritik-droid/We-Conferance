{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CCard } from '../card/CCard.js';\nimport { CCardBody } from '../card/CCardBody.js';\nimport '../card/CCardFooter.js';\nimport '../card/CCardGroup.js';\nimport { CCardHeader } from '../card/CCardHeader.js';\nimport '../card/CCardImage.js';\nimport '../card/CCardImageOverlay.js';\nimport '../card/CCardLink.js';\nimport '../card/CCardSubtitle.js';\nimport '../card/CCardText.js';\nimport '../card/CCardTitle.js';\nimport { CCol } from '../grid/CCol.js';\nimport { colorPropType } from '../../props.js';\nvar CWidgetStatsD = forwardRef(function (_a, ref) {\n  var _b;\n  var className = _a.className,\n    chart = _a.chart,\n    color = _a.color,\n    icon = _a.icon,\n    values = _a.values,\n    rest = __rest(_a, [\"className\", \"chart\", \"color\", \"icon\", \"values\"]);\n  return React.createElement(CCard, __assign({\n    className: className\n  }, rest, {\n    ref: ref\n  }), React.createElement(CCardHeader, {\n    className: classNames('position-relative d-flex justify-content-center align-items-center', (_b = {}, _b[\"bg-\".concat(color)] = color, _b))\n  }, icon, chart), React.createElement(CCardBody, {\n    className: \"row text-center\"\n  }, values && values.map(function (value, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, index % 2 !== 0 && React.createElement(\"div\", {\n      className: \"vr\"\n    }), React.createElement(CCol, null, React.createElement(\"div\", {\n      className: \"fs-5 fw-semibold\"\n    }, value.value), React.createElement(\"div\", {\n      className: \"text-uppercase text-body-secondary small\"\n    }, value.title)));\n  })));\n});\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any)\n};\nCWidgetStatsD.displayName = 'CWidgetStatsD';\nexport { CWidgetStatsD };","map":{"version":3,"names":["CWidgetStatsD","forwardRef","_a","ref","className","chart","color","icon","values","rest","__rest","React","createElement","CCard","__assign","CCardHeader","classNames","_b","concat","CCardBody","map","value","index","Fragment","key","CCol","title","propTypes","PropTypes","oneOfType","string","node","colorPropType","arrayOf","any","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/widgets/CWidgetStatsD.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody, CCardHeader } from '../card'\nimport { CCol } from '../grid/CCol'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\ntype Value = {\n  title?: string | ReactNode\n  value?: number | string | ReactNode\n}\n\nexport interface CWidgetStatsDProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Values and titles for your component.\n   */\n  values?: Value[]\n}\n\nexport const CWidgetStatsD = forwardRef<HTMLDivElement, CWidgetStatsDProps>(\n  ({ className, chart, color, icon, values, ...rest }, ref) => {\n    return (\n      <CCard className={className} {...rest} ref={ref}>\n        <CCardHeader\n          className={classNames(\n            'position-relative d-flex justify-content-center align-items-center',\n            {\n              [`bg-${color}`]: color,\n            },\n          )}\n        >\n          {icon}\n          {chart}\n        </CCardHeader>\n        <CCardBody className=\"row text-center\">\n          {values &&\n            values.map((value: Value, index: number) => {\n              return (\n                <React.Fragment key={index}>\n                  {index % 2 !== 0 && <div className=\"vr\"></div>}\n                  <CCol>\n                    <div className=\"fs-5 fw-semibold\">{value.value}</div>\n                    <div className=\"text-uppercase text-body-secondary small\">{value.title}</div>\n                  </CCol>\n                </React.Fragment>\n              )\n            })}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any),\n}\n\nCWidgetStatsD.displayName = 'CWidgetStatsD'\n"],"mappings":";;;;;;;;;;;;;;;;;IAwCaA,aAAa,GAAGC,UAAU,CACrC,UAACC,EAAkD,EAAEC,GAAG;;EAArD,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAEC,KAAK,GAAAH,EAAA,CAAAG,KAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAEC,IAAI,GAAAL,EAAA,CAAAK,IAAA;IAAEC,MAAM,GAAAN,EAAA,CAAAM,MAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAAhD,iDAAkD,CAAF;EAC/C,OACES,KAAA,CAAAC,aAAA,CAACC,KAAK,EAAAC,QAAA;IAACV,SAAS,EAAEA;EAAS,GAAMK,IAAI;IAAEN,GAAG,EAAEA;EAAG,IAC7CQ,KAAA,CAAAC,aAAA,CAACG,WAAW,EACV;IAAAX,SAAS,EAAEY,UAAU,CACnB,oEAAoE,GAAAC,EAAA,OAElEA,EAAA,CAAC,KAAM,CAAAC,MAAA,CAAAZ,KAAK,CAAE,IAAGA,KAAK,EAEzBW,EAAA;EAAA,GAEAV,IAAI,EACJF,KAAK,CACM,EACdM,KAAA,CAAAC,aAAA,CAACO,SAAS,EAAC;IAAAf,SAAS,EAAC;EAAiB,GACnCI,MAAM,IACLA,MAAM,CAACY,GAAG,CAAC,UAACC,KAAY,EAAEC,KAAa;IACrC,OACEX,KAAA,CAAAC,aAAA,CAACD,KAAK,CAACY,QAAQ,EAAC;MAAAC,GAAG,EAAEF;IAAK,GACvBA,KAAK,GAAG,CAAC,KAAK,CAAC,IAAIX,KAAK,CAAAC,aAAA;MAAAR,SAAS,EAAC;IAAI,CAAO,GAC9CO,KAAA,CAAAC,aAAA,CAACa,IAAI,QACHd,KAAA,CAAAC,aAAA;MAAKR,SAAS,EAAC;IAAkB,GAAEiB,KAAK,CAACA,KAAK,CAAO,EACrDV,KAAK,CAAAC,aAAA;MAAAR,SAAS,EAAC;IAA0C,CAAE,EAAAiB,KAAK,CAACK,KAAK,CAAO,CACxE,CACQ;EAErB,CAAC,CAAC,CACM,CACN;AAEZ,CAAC;AAGH1B,aAAa,CAAC2B,SAAS,GAAG;EACxBtB,KAAK,EAAEuB,SAAS,CAACC,SAAS,CAAC,CAACD,SAAS,CAACE,MAAM,EAAEF,SAAS,CAACG,IAAI,CAAC,CAAC;EAC9D3B,SAAS,EAAEwB,SAAS,CAACE,MAAM;EAC3BxB,KAAK,EAAE0B,aAAa;EACpBzB,IAAI,EAAEqB,SAAS,CAACC,SAAS,CAAC,CAACD,SAAS,CAACE,MAAM,EAAEF,SAAS,CAACG,IAAI,CAAC,CAAC;EAC7DvB,MAAM,EAAEoB,SAAS,CAACK,OAAO,CAACL,SAAS,CAACM,GAAG;CACxC;AAEDlC,aAAa,CAACmC,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}