{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CFormControlWrapper } from './CFormControlWrapper.js';\nvar CFormSelect = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    feedback = _a.feedback,\n    feedbackInvalid = _a.feedbackInvalid,\n    feedbackValid = _a.feedbackValid,\n    floatingClassName = _a.floatingClassName,\n    floatingLabel = _a.floatingLabel,\n    htmlSize = _a.htmlSize,\n    id = _a.id,\n    invalid = _a.invalid,\n    label = _a.label,\n    options = _a.options,\n    size = _a.size,\n    text = _a.text,\n    tooltipFeedback = _a.tooltipFeedback,\n    valid = _a.valid,\n    rest = __rest(_a, [\"children\", \"className\", \"feedback\", \"feedbackInvalid\", \"feedbackValid\", \"floatingClassName\", \"floatingLabel\", \"htmlSize\", \"id\", \"invalid\", \"label\", \"options\", \"size\", \"text\", \"tooltipFeedback\", \"valid\"]);\n  return React.createElement(CFormControlWrapper, {\n    describedby: rest['aria-describedby'],\n    feedback: feedback,\n    feedbackInvalid: feedbackInvalid,\n    feedbackValid: feedbackValid,\n    floatingClassName: floatingClassName,\n    floatingLabel: floatingLabel,\n    id: id,\n    invalid: invalid,\n    label: label,\n    text: text,\n    tooltipFeedback: tooltipFeedback,\n    valid: valid\n  }, React.createElement(\"select\", __assign({\n    id: id,\n    className: classNames('form-select', (_b = {}, _b[\"form-select-\".concat(size)] = size, _b['is-invalid'] = invalid, _b['is-valid'] = valid, _b), className),\n    size: htmlSize\n  }, rest, {\n    ref: ref\n  }), options ? options.map(function (option, index) {\n    return React.createElement(\"option\", __assign({}, typeof option === 'object' && option.disabled && {\n      disabled: option.disabled\n    }, typeof option === 'object' && option.value !== undefined && {\n      value: option.value\n    }, {\n      key: index\n    }), typeof option === 'string' ? option : option.label);\n  }) : children));\n});\nCFormSelect.propTypes = __assign({\n  className: PropTypes.string,\n  htmlSize: PropTypes.number,\n  options: PropTypes.array\n}, CFormControlWrapper.propTypes);\nCFormSelect.displayName = 'CFormSelect';\nexport { CFormSelect };","map":{"version":3,"names":["CFormSelect","forwardRef","_a","ref","children","className","feedback","feedbackInvalid","feedbackValid","floatingClassName","floatingLabel","htmlSize","id","invalid","label","options","size","text","tooltipFeedback","valid","rest","__rest","React","createElement","CFormControlWrapper","describedby","__assign","classNames","_b","concat","map","option","index","disabled","value","undefined","key","propTypes","PropTypes","string","number","array","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\form\\CFormSelect.tsx"],"sourcesContent":["import React, { ChangeEventHandler, forwardRef, InputHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormControlWrapper, CFormControlWrapperProps } from './CFormControlWrapper'\n\ntype Option = {\n  disabled?: boolean\n  label?: string\n  value?: string\n}\n\nexport interface CFormSelectProps\n  extends CFormControlWrapperProps,\n    Omit<InputHTMLAttributes<HTMLSelectElement>, 'size'> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Specifies the number of visible options in a drop-down list.\n   */\n  htmlSize?: number\n  /**\n   * Method called immediately after the `value` prop changes.\n   */\n  onChange?: ChangeEventHandler<HTMLSelectElement>\n  /**\n   * Options list of the select component. Available keys: `label`, `value`, `disabled`.\n   * Examples:\n   * - `options={[{ value: 'js', label: 'JavaScript' }, { value: 'html', label: 'HTML', disabled: true }]}`\n   * - `options={['js', 'html']}`\n   */\n  options?: Option[] | string[]\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * The `value` attribute of component.\n   *\n   * @controllable onChange\n   */\n  value?: string | string[] | number\n}\n\nexport const CFormSelect = forwardRef<HTMLSelectElement, CFormSelectProps>(\n  (\n    {\n      children,\n      className,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      floatingClassName,\n      floatingLabel,\n      htmlSize,\n      id,\n      invalid,\n      label,\n      options,\n      size,\n      text,\n      tooltipFeedback,\n      valid,\n      ...rest\n    },\n    ref,\n  ) => {\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        floatingClassName={floatingClassName}\n        floatingLabel={floatingLabel}\n        id={id}\n        invalid={invalid}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      >\n        <select\n          id={id}\n          className={classNames(\n            'form-select',\n            {\n              [`form-select-${size}`]: size,\n              'is-invalid': invalid,\n              'is-valid': valid,\n            },\n            className,\n          )}\n          size={htmlSize}\n          {...rest}\n          ref={ref}\n        >\n          {options\n            ? options.map((option, index) => {\n                return (\n                  <option\n                    {...(typeof option === 'object' &&\n                      option.disabled && { disabled: option.disabled })}\n                    {...(typeof option === 'object' &&\n                      option.value !== undefined && { value: option.value })}\n                    key={index}\n                  >\n                    {typeof option === 'string' ? option : option.label}\n                  </option>\n                )\n              })\n            : children}\n        </select>\n      </CFormControlWrapper>\n    )\n  },\n)\n\nCFormSelect.propTypes = {\n  className: PropTypes.string,\n  htmlSize: PropTypes.number,\n  options: PropTypes.array,\n  ...CFormControlWrapper.propTypes,\n}\n\nCFormSelect.displayName = 'CFormSelect'\n"],"mappings":";;;;;IA8CaA,WAAW,GAAGC,UAAU,CACnC,UACEC,EAkBC,EACDC,GAAG;;EAlBD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IACTC,QAAQ,GAAAJ,EAAA,CAAAI,QAAA;IACRC,eAAe,GAAAL,EAAA,CAAAK,eAAA;IACfC,aAAa,GAAAN,EAAA,CAAAM,aAAA;IACbC,iBAAiB,GAAAP,EAAA,CAAAO,iBAAA;IACjBC,aAAa,GAAAR,EAAA,CAAAQ,aAAA;IACbC,QAAQ,GAAAT,EAAA,CAAAS,QAAA;IACRC,EAAE,GAAAV,EAAA,CAAAU,EAAA;IACFC,OAAO,GAAAX,EAAA,CAAAW,OAAA;IACPC,KAAK,GAAAZ,EAAA,CAAAY,KAAA;IACLC,OAAO,GAAAb,EAAA,CAAAa,OAAA;IACPC,IAAI,GAAAd,EAAA,CAAAc,IAAA;IACJC,IAAI,GAAAf,EAAA,CAAAe,IAAA;IACJC,eAAe,GAAAhB,EAAA,CAAAgB,eAAA;IACfC,KAAK,GAAAjB,EAAA,CAAAiB,KAAA;IACFC,IAAI,GAjBTC,MAAA,CAAAnB,EAAA,8MAkBC,CADQ;EAIT,OACEoB,KAAC,CAAAC,aAAA,CAAAC,mBAAmB,EAClB;IAAAC,WAAW,EAAEL,IAAI,CAAC,kBAAkB,CAAC;IACrCd,QAAQ,EAAEA,QAAQ;IAClBC,eAAe,EAAEA,eAAe;IAChCC,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA,iBAAiB;IACpCC,aAAa,EAAEA,aAAa;IAC5BE,EAAE,EAAEA,EAAE;IACNC,OAAO,EAAEA,OAAO;IAChBC,KAAK,EAAEA,KAAK;IACZG,IAAI,EAAEA,IAAI;IACVC,eAAe,EAAEA,eAAe;IAChCC,KAAK,EAAEA;EAAK,GAEZG,KACE,CAAAC,aAAA,WAAAG,QAAA;IAAAd,EAAE,EAAEA,EAAE;IACNP,SAAS,EAAEsB,UAAU,CACnB,aAAa,GAAAC,EAAA,OAEXA,EAAA,CAAC,cAAe,CAAAC,MAAA,CAAAb,IAAI,CAAE,IAAGA,IAAI,EAC7BY,EAAA,cAAY,GAAEf,OAAO,EACrBe,EAAA,YAAU,GAAET,KAAK,EAEnBS,EAAA,GAAAvB,SAAS,CACV;IACDW,IAAI,EAAEL;EAAQ,GACVS,IAAI;IACRjB,GAAG,EAAEA;EAAG,IAEPY,OAAO,GACJA,OAAO,CAACe,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;IACxB,OACEV,KACM,CAAAC,aAAA,WAAAG,QAAA,KAAC,OAAOK,MAAM,KAAK,QAAQ,IAC7BA,MAAM,CAACE,QAAQ,IAAI;MAAEA,QAAQ,EAAEF,MAAM,CAACE;IAAQ,CAAE,EAC7C,OAAOF,MAAM,KAAK,QAAQ,IAC7BA,MAAM,CAACG,KAAK,KAAKC,SAAS,IAAI;MAAED,KAAK,EAAEH,MAAM,CAACG;IAAK,CAAE,EAAC;MACxDE,GAAG,EAAEJ;IAAK,CAET,UAAOD,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGA,MAAM,CAACjB,KAAK,CAC5C;EAEb,CAAC,CAAC,GACFV,QAAQ,CACL,CACW;AAE1B,CAAC;AAGHJ,WAAW,CAACqC,SAAS,GAAAX,QAAA;EACnBrB,SAAS,EAAEiC,SAAS,CAACC,MAAM;EAC3B5B,QAAQ,EAAE2B,SAAS,CAACE,MAAM;EAC1BzB,OAAO,EAAEuB,SAAS,CAACG;AAAK,GACrBjB,mBAAmB,CAACa,SAAS,CACjC;AAEDrC,WAAW,CAAC0C,WAAW,GAAG,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}