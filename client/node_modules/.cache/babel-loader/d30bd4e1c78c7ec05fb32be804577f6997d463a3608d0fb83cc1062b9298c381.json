{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CAccordionContext = createContext({});\nvar CAccordion = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    activeItemKey = _a.activeItemKey,\n    _b = _a.alwaysOpen,\n    alwaysOpen = _b === void 0 ? false : _b,\n    className = _a.className,\n    flush = _a.flush,\n    rest = __rest(_a, [\"children\", \"activeItemKey\", \"alwaysOpen\", \"className\", \"flush\"]);\n  var _c = useState(activeItemKey),\n    _activeItemKey = _c[0],\n    setActiveKey = _c[1];\n  return React.createElement(\"div\", __assign({\n    className: classNames('accordion', {\n      'accordion-flush': flush\n    }, className)\n  }, rest, {\n    ref: ref\n  }), React.createElement(CAccordionContext.Provider, {\n    value: {\n      _activeItemKey: _activeItemKey,\n      alwaysOpen: alwaysOpen,\n      setActiveKey: setActiveKey\n    }\n  }, children));\n});\nCAccordion.propTypes = {\n  alwaysOpen: PropTypes.bool,\n  activeItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  flush: PropTypes.bool\n};\nCAccordion.displayName = 'CAccordion';\nexport { CAccordion, CAccordionContext };","map":{"version":3,"names":["CAccordionContext","createContext","CAccordion","forwardRef","_a","ref","children","activeItemKey","_b","alwaysOpen","className","flush","rest","__rest","_c","useState","_activeItemKey","setActiveKey","React","createElement","__assign","classNames","Provider","value","propTypes","PropTypes","bool","oneOfType","number","string","node","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\accordion\\CAccordion.tsx"],"sourcesContent":["import React, { createContext, forwardRef, HTMLAttributes, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CAccordionProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The active item key.\n   */\n  activeItemKey?: number | string\n  /**\n   * Make accordion items stay open when another item is opened\n   */\n  alwaysOpen?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Removes the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.\n   */\n  flush?: boolean\n}\n\nexport interface CAccordionContextProps {\n  _activeItemKey?: number | string\n  alwaysOpen?: boolean\n  setActiveKey: React.Dispatch<React.SetStateAction<number | string | undefined>>\n}\n\nexport const CAccordionContext = createContext({} as CAccordionContextProps)\n\nexport const CAccordion = forwardRef<HTMLDivElement, CAccordionProps>(\n  ({ children, activeItemKey, alwaysOpen = false, className, flush, ...rest }, ref) => {\n    const [_activeItemKey, setActiveKey] = useState(activeItemKey)\n\n    return (\n      <div\n        className={classNames('accordion', { 'accordion-flush': flush }, className)}\n        {...rest}\n        ref={ref}\n      >\n        <CAccordionContext.Provider value={{ _activeItemKey, alwaysOpen, setActiveKey }}>\n          {children}\n        </CAccordionContext.Provider>\n      </div>\n    )\n  },\n)\n\nCAccordion.propTypes = {\n  alwaysOpen: PropTypes.bool,\n  activeItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  flush: PropTypes.bool,\n}\n\nCAccordion.displayName = 'CAccordion'\n"],"mappings":";;;;IA6BaA,iBAAiB,GAAGC,aAAa,CAAC,EAA4B;IAE9DC,UAAU,GAAGC,UAAU,CAClC,UAACC,EAA0E,EAAEC,GAAG;EAA7E,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,aAAa,GAAAH,EAAA,CAAAG,aAAA;IAAEC,EAAA,GAAAJ,EAAA,CAAAK,UAAkB;IAAlBA,UAAU,GAAGD,EAAA,mBAAK,GAAAA,EAAA;IAAEE,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAEC,KAAK,GAAAP,EAAA,CAAAO,KAAA;IAAKC,IAAI,GAAxEC,MAAA,CAAAT,EAAA,mEAA0E,CAAF;EACjE,IAAAU,EAAA,GAAiCC,QAAQ,CAACR,aAAa,CAAC;IAAvDS,cAAc,GAAAF,EAAA;IAAEG,YAAY,GAAAH,EAAA,GAA2B;EAE9D,OACEI,KAAA,CAAAC,aAAA,QAAAC,QAAA;IACEV,SAAS,EAAEW,UAAU,CAAC,WAAW,EAAE;MAAE,iBAAiB,EAAEV;IAAK,CAAE,EAAED,SAAS;EAAC,GACvEE,IAAI;IACRP,GAAG,EAAEA;EAAG,IAERa,KAAC,CAAAC,aAAA,CAAAnB,iBAAiB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEP,cAAc,EAAAA,cAAA;MAAEP,UAAU,EAAAA,UAAA;MAAEQ,YAAY,EAAAA;IAAA;EAAE,GAC5EX,QAAQ,CACkB,CACzB;AAEV,CAAC;AAGHJ,UAAU,CAACsB,SAAS,GAAG;EACrBf,UAAU,EAAEgB,SAAS,CAACC,IAAI;EAC1BnB,aAAa,EAAEkB,SAAS,CAACE,SAAS,CAAC,CAACF,SAAS,CAACG,MAAM,EAAEH,SAAS,CAACI,MAAM,CAAC,CAAC;EACxEvB,QAAQ,EAAEmB,SAAS,CAACK,IAAI;EACxBpB,SAAS,EAAEe,SAAS,CAACI,MAAM;EAC3BlB,KAAK,EAAEc,SAAS,CAACC;CAClB;AAEDxB,UAAU,CAAC6B,WAAW,GAAG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}