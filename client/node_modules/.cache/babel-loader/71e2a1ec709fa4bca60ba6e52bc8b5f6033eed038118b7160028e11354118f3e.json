{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CFormFeedback = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    _c = _a.as,\n    Component = _c === void 0 ? 'div' : _c,\n    className = _a.className,\n    invalid = _a.invalid,\n    tooltip = _a.tooltip,\n    valid = _a.valid,\n    rest = __rest(_a, [\"children\", \"as\", \"className\", \"invalid\", \"tooltip\", \"valid\"]);\n  return React.createElement(Component, __assign({\n    className: classNames((_b = {}, _b[\"invalid-\".concat(tooltip ? 'tooltip' : 'feedback')] = invalid, _b[\"valid-\".concat(tooltip ? 'tooltip' : 'feedback')] = valid, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCFormFeedback.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  invalid: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  valid: PropTypes.bool\n};\nCFormFeedback.displayName = 'CFormFeedback';\nexport { CFormFeedback };","map":{"version":3,"names":["CFormFeedback","forwardRef","_a","ref","children","_c","as","Component","className","invalid","tooltip","valid","rest","__rest","React","createElement","__assign","classNames","_b","concat","propTypes","PropTypes","elementType","node","string","bool","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/form/CFormFeedback.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CFormFeedbackProps extends HTMLAttributes<HTMLDivElement | HTMLSpanElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n\n  /**\n   * Method called immediately after the `value` prop changes.\n   */\n  invalid?: boolean\n  /**\n   * If your form layout allows it, you can display validation feedback in a styled tooltip.\n   */\n  tooltip?: boolean\n  /**\n   * Set component validation state to valid.\n   */\n  valid?: boolean\n}\n\nexport const CFormFeedback: PolymorphicRefForwardingComponent<'div', CFormFeedbackProps> =\n  forwardRef<HTMLDivElement | HTMLSpanElement, CFormFeedbackProps>(\n    ({ children, as: Component = 'div', className, invalid, tooltip, valid, ...rest }, ref) => {\n      return (\n        <Component\n          className={classNames(\n            {\n              [`invalid-${tooltip ? 'tooltip' : 'feedback'}`]: invalid,\n              [`valid-${tooltip ? 'tooltip' : 'feedback'}`]: valid,\n            },\n            className,\n          )}\n          {...rest}\n          ref={ref}\n        >\n          {children}\n        </Component>\n      )\n    },\n  )\n\nCFormFeedback.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  invalid: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  valid: PropTypes.bool,\n}\n\nCFormFeedback.displayName = 'CFormFeedback'\n"],"mappings":";;;;IA8BaA,aAAa,GACxBC,UAAU,CACR,UAACC,EAAgF,EAAEC,GAAG;;EAAnF,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAqB,GAAAH,EAAA,CAAAI,EAAA;IAAjBC,SAAS,GAAGF,EAAA,mBAAK,GAAAA,EAAA;IAAEG,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAEC,OAAO,GAAAP,EAAA,CAAAO,OAAA;IAAEC,OAAO,GAAAR,EAAA,CAAAQ,OAAA;IAAEC,KAAK,GAAAT,EAAA,CAAAS,KAAA;IAAKC,IAAI,GAA9EC,MAAA,CAAAX,EAAA,gEAAgF,CAAF;EAC7E,OACEY,KAAC,CAAAC,aAAA,CAAAR,SAAS,EACRS,QAAA;IAAAR,SAAS,EAAES,UAAU,EAAAC,EAAA,OAEjBA,EAAA,CAAC,UAAW,CAAAC,MAAA,CAAAT,OAAO,GAAG,SAAS,GAAG,UAAU,CAAE,IAAGD,OAAO,EACxDS,EAAA,CAAC,QAAS,CAAAC,MAAA,CAAAT,OAAO,GAAG,SAAS,GAAG,UAAU,CAAE,IAAGC,KAAK,E,KAEtDH,SAAS;EACV,CACG,EAAAI,IAAI,EACR;IAAAT,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACC;AAEhB,CAAC;AAGLJ,aAAa,CAACoB,SAAS,GAAG;EACxBd,EAAE,EAAEe,SAAS,CAACC,WAAW;EACzBlB,QAAQ,EAAEiB,SAAS,CAACE,IAAI;EACxBf,SAAS,EAAEa,SAAS,CAACG,MAAM;EAC3Bf,OAAO,EAAEY,SAAS,CAACI,IAAI;EACvBf,OAAO,EAAEW,SAAS,CAACI,IAAI;EACvBd,KAAK,EAAEU,SAAS,CAACI;CAClB;AAEDzB,aAAa,CAAC0B,WAAW,GAAG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}