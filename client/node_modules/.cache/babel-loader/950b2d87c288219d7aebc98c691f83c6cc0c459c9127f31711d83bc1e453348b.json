{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CModalDialog = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    alignment = _a.alignment,\n    className = _a.className,\n    fullscreen = _a.fullscreen,\n    scrollable = _a.scrollable,\n    size = _a.size,\n    rest = __rest(_a, [\"children\", \"alignment\", \"className\", \"fullscreen\", \"scrollable\", \"size\"]);\n  return React.createElement(\"div\", __assign({\n    className: classNames('modal-dialog', (_b = {\n      'modal-dialog-centered': alignment === 'center'\n    }, _b[typeof fullscreen === 'boolean' ? 'modal-fullscreen' : \"modal-fullscreen-\".concat(fullscreen, \"-down\")] = fullscreen, _b['modal-dialog-scrollable'] = scrollable, _b[\"modal-\".concat(size)] = size, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl'])\n};\nCModalDialog.displayName = 'CModalDialog';\nexport { CModalDialog };","map":{"version":3,"names":["CModalDialog","forwardRef","_a","ref","children","alignment","className","fullscreen","scrollable","size","rest","__rest","React","createElement","__assign","classNames","_b","concat","propTypes","PropTypes","oneOf","node","string","oneOfType","bool","displayName"],"sources":["/root/Desktop/We-Conferance/client/node_modules/@coreui/react/src/components/modal/CModalDialog.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalDialogProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Does the modal dialog itself scroll, or does the whole dialog scroll within the window.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n}\n\nexport const CModalDialog = forwardRef<HTMLDivElement, CModalDialogProps>(\n  ({ children, alignment, className, fullscreen, scrollable, size, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'modal-dialog',\n          {\n            'modal-dialog-centered': alignment === 'center',\n            [typeof fullscreen === 'boolean'\n              ? 'modal-fullscreen'\n              : `modal-fullscreen-${fullscreen}-down`]: fullscreen,\n            'modal-dialog-scrollable': scrollable,\n            [`modal-${size}`]: size,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n}\n\nCModalDialog.displayName = 'CModalDialog'\n"],"mappings":";;;;IA2BaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAAyE,EAAEC,GAAG;;EAA5E,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,UAAU,GAAAL,EAAA,CAAAK,UAAA;IAAEC,UAAU,GAAAN,EAAA,CAAAM,UAAA;IAAEC,IAAI,GAAAP,EAAA,CAAAO,IAAA;IAAKC,IAAI,GAAvEC,MAAA,CAAAT,EAAA,4EAAyE,CAAF;EACtE,OACEU,KACE,CAAAC,aAAA,QAAAC,QAAA;IAAAR,SAAS,EAAES,UAAU,CACnB,cAAc,GAAAC,EAAA;MAEZ,uBAAuB,EAAEX,SAAS,KAAK;OACvCW,EAAC,QAAOT,UAAU,KAAK,SAAS,GAC5B,kBAAkB,GAClB,oBAAAU,MAAA,CAAoBV,UAAU,UAAO,IAAGA,UAAU,EACtDS,EAAA,2BAAyB,GAAER,UAAU,EACrCQ,EAAA,CAAC,QAAS,CAAAC,MAAA,CAAAR,IAAI,CAAE,IAAGA,IAAI,E,KAEzBH,SAAS;EACV,CACG,EAAAI,IAAI,EACR;IAAAP,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACL;AAEV,CAAC;AAGHJ,YAAY,CAACkB,SAAS,GAAG;EACvBb,SAAS,EAAEc,SAAS,CAACC,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC7ChB,QAAQ,EAAEe,SAAS,CAACE,IAAI;EACxBf,SAAS,EAAEa,SAAS,CAACG,MAAM;EAC3Bf,UAAU,EAAEY,SAAS,CAACI,SAAS,CAAC,CAC9BJ,SAAS,CAACK,IAAI,EACdL,SAAS,CAACC,KAAK,CAAoC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CACpF,CAAC;EACFZ,UAAU,EAAEW,SAAS,CAACK,IAAI;EAC1Bf,IAAI,EAAEU,SAAS,CAACC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CACzC;AAEDpB,YAAY,CAACyB,WAAW,GAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}