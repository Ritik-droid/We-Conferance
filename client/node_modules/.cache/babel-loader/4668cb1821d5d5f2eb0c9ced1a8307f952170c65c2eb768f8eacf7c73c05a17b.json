{"ast":null,"code":"import { __rest } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nvar CRow = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    rest = __rest(_a, [\"children\", \"className\"]);\n  var repsonsiveClassNames = [];\n  BREAKPOINTS.forEach(function (bp) {\n    var breakpoint = rest[bp];\n    delete rest[bp];\n    var infix = bp === 'xs' ? '' : \"-\".concat(bp);\n    if (typeof breakpoint === 'object') {\n      if (breakpoint.cols) {\n        repsonsiveClassNames.push(\"row-cols\".concat(infix, \"-\").concat(breakpoint.cols));\n      }\n      if (typeof breakpoint.gutter === 'number') {\n        repsonsiveClassNames.push(\"g\".concat(infix, \"-\").concat(breakpoint.gutter));\n      }\n      if (typeof breakpoint.gutterX === 'number') {\n        repsonsiveClassNames.push(\"gx\".concat(infix, \"-\").concat(breakpoint.gutterX));\n      }\n      if (typeof breakpoint.gutterY === 'number') {\n        repsonsiveClassNames.push(\"gy\".concat(infix, \"-\").concat(breakpoint.gutterY));\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    className: classNames('row', repsonsiveClassNames, className),\n    ref: ref\n  }, children);\n});\nvar bp = PropTypes.shape({\n  cols: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.string]),\n  gutter: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterY: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\nCRow.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  xs: bp,\n  sm: bp,\n  md: bp,\n  lg: bp,\n  xl: bp,\n  xxl: bp\n};\nCRow.displayName = 'CRow';\nexport { CRow };","map":{"version":3,"names":["BREAKPOINTS","CRow","forwardRef","_a","ref","children","className","rest","__rest","repsonsiveClassNames","forEach","bp","breakpoint","infix","concat","cols","push","gutter","gutterX","gutterY","React","createElement","classNames","PropTypes","shape","oneOfType","oneOf","number","string","propTypes","node","xs","sm","md","lg","xl","xxl","displayName"],"sources":["C:\\Users\\ritik\\OneDrive\\Desktop\\We-Conferance\\client\\node_modules\\@coreui\\react\\src\\components\\grid\\CRow.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport type BPObject = {\n  cols?: 'auto' | number | string | null\n  gutter?: number | string | null\n  gutterX?: number | string | null\n  gutterY?: number | string | null\n}\n\nexport interface CRowProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The number of columns/offset/order on extra small devices (<576px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xs?: BPObject\n  /**\n   * The number of columns/offset/order on small devices (<768px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  sm?: BPObject\n  /**\n   * The number of columns/offset/order on medium devices (<992px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  md?: BPObject\n  /**\n   * The number of columns/offset/order on large devices (<1200px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  lg?: BPObject\n  /**\n   * The number of columns/offset/order on X-Large devices (<1400px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xl?: BPObject\n  /**\n   * The number of columns/offset/order on XX-Large devices (â‰¥1400px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xxl?: BPObject\n}\n\nconst BREAKPOINTS = [\n  'xxl' as const,\n  'xl' as const,\n  'lg' as const,\n  'md' as const,\n  'sm' as const,\n  'xs' as const,\n]\n\nexport const CRow = forwardRef<HTMLDivElement, CRowProps>(\n  ({ children, className, ...rest }, ref) => {\n    const repsonsiveClassNames: string[] = []\n\n    BREAKPOINTS.forEach((bp) => {\n      const breakpoint = rest[bp]\n      delete rest[bp]\n\n      const infix = bp === 'xs' ? '' : `-${bp}`\n\n      if (typeof breakpoint === 'object') {\n        if (breakpoint.cols) {\n          repsonsiveClassNames.push(`row-cols${infix}-${breakpoint.cols}`)\n        }\n\n        if (typeof breakpoint.gutter === 'number') {\n          repsonsiveClassNames.push(`g${infix}-${breakpoint.gutter}`)\n        }\n\n        if (typeof breakpoint.gutterX === 'number') {\n          repsonsiveClassNames.push(`gx${infix}-${breakpoint.gutterX}`)\n        }\n\n        if (typeof breakpoint.gutterY === 'number') {\n          repsonsiveClassNames.push(`gy${infix}-${breakpoint.gutterY}`)\n        }\n      }\n    })\n\n    return (\n      <div className={classNames('row', repsonsiveClassNames, className)} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nconst bp = PropTypes.shape({\n  cols: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.string]),\n  gutter: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterY: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n})\n\nCRow.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  xs: bp,\n  sm: bp,\n  md: bp,\n  lg: bp,\n  xl: bp,\n  xxl: bp,\n}\n\nCRow.displayName = 'CRow'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}